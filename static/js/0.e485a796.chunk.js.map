{"version":3,"sources":["components/MainContainer/MainContainer.tsx","components/Loading/Loading.tsx","components/Modal/Modal.tsx","components/ApplicationDetails/Assessment.tsx","components/ApplicationDetails/Screening.tsx","components/ApplicationDetails/PeerReview.tsx","components/ApplicationDetails/edit/EditScreening.tsx","components/ApplicationDetails/details/ScreeningDetails.tsx","components/ApplicationDetails/edit/EditPeerReview.tsx","components/ApplicationDetails/details/PeerReviewDetails.tsx","components/ApplicationDetails/edit/EditAssessment.tsx","components/ApplicationDetails/edit/EditQuery.tsx","components/ApplicationDetails/details/AssessmentDetails.tsx","components/ApplicationDetails/ApplicationStatus.tsx","components/ApplicationDetails/ApplicationDetailsDashboard/ApplicationDetailsDashboard.tsx","components/ApplicationDetails/ApplicationDetails.tsx","components/RegisterProduct/RegisterProduct.tsx","containers/CreateApplication/CreateApplication.tsx"],"names":["MainContainer","props","className","children","Loading","Themes","ModalMarginTop","ModalSize","Modal","themeColor","title","backDrop","theme","close","backDropClose","widthSizeClass","displayClose","padding","body","footer","primary","secondary","danger","success","warning","onClick","undefined","marginTop","none","style","width","maxHeight","height","maxWidth","overflowY","margin","zIndex","default","CurrentStatusEnum","GetLastScreeningValue","screenings","length","screeningNumberOfDays","feedback_date","date_of_screening_feedback","response_date","date_of_screening_response","ToDayDate","Date","console","log","DATE","timestampToDate","fullDATE","GetDaysFromTwoDates","toString","validateScreening30Days","FCGetScreeningStatusElement","screening_status","ScreeningStatusValues","PROGRESS_IN_SCREENING","SCREENING_COMPLETED","Screening","data","state","loading","error","openScreeningDetails","this","Component","GetLastPeerReviewValue","peerreviews","FCGetPeerReviewStatusElement","peerReview_status","toUpperCase","PeerReviewStatusValues","incomplete","approved","PeerReview","openPeerReview","comment","status","GetLastAssessmentValue","assessments","temp","i","push","round1DataL2","filter","itm","assessment_round","RoundValues","ROUND_ONE","assessment_level","LevelsValues","LEVEL_TWO","round2DataL2","ROUND_TWO","round3DataL2","ROUND_THREE","round1DataL1","LEVEL_ONE","round2DataL1","round3DataL1","RoundThree","RoundTwo","RoundOne","getLastQuery","last_assessment","last_query","assessmentqueries","find","queryAnsweringNumberOfDays","query_issued_date","query_response_date","validateQuery90Days","lastQuery","GetAssessmentStatusName","AssessmentOutcomeValues","NR","OG","R","GetRoundName","round","ApplicationCurrentState","NOT_SCREENED","SCREENING_PROCESS","NOT_ASSESSED","WAITING_FOR_ASSESSMENT","assessment_outcome","WAITING_TO_SEND_QUERY_ISSUE","WAITING_FOR_QUERY_RESPONSE","QUERY_RESPONSE_WAITING_FOR_ASSESSOR","WAITING_FOR_PEER_REVIEW","toLocaleLowerCase","registration_Status","RegistrationStates","REGISTERED","WAITING_FOR_REGISTRATION","NULL","GetDaysQueryWaitingForAssessment","last_date","FCGetAssessmentStatusElement","assessment_status","Assessment","FilterByRounds","selected_round","FindDataByLevelRound","level","res","validateAssessmentQuery","openAssessmentDetails","Math","EditScreening","SubmitScreening","e","preventDefault","application_id","setState","target","msg","application_ref_number","editScreening","done_by","data_saved","screening_feedback","screening_response","done_at","FC_UpdateScreening","feedback","type","onSave","modal","onGoBack","onSubmit","value","onChange","disabled","Alert","alertType","AlertType","DANGER","description","WITHDRAWN","map","item","SUCCESS","ScreeningSection","date","EmptyScreeningSection","ScreeningDetails","GetLastScreeningFeedBack","GetLastScreeningResponse","EditPeerReview","SubmitPeerReview","peer_review_status","FC_UpdatePeerReview","rejected","PeerReviewDetails","editReview","openPeerReviewDetails","EditAssessment","SubmitAssessment","assessment_start_date","assessment_end_date","assessment_comment","FC_UpdateAssessment","action_type","EditQuery","query_issued","query_response","selectedRound","FC_SendQuery","ValidateAssessmentRound","temp_data","test","ValidateQueryRound","GetEmptyQueryElement","GetQueryElement","days_status","allData","AssessmentDetails","iteration","FindQueriesByRound","GetLastQuery","componentDidMount","open_edit_assessment","selected_level","SetSelectQuery","openQuery","alert","ReturnAssessmentRoundDetails","waiting_status_component","RoundsArray","r","ApplicationStatus","ApplicationDetailsDashboard","TotalDownTime","total","down_time","commaFy","current_days","up_time","abs","ApplicationDetails","DownloadRegistrationCertificate","DownloadCertificate","FC_SetSuccess","open_screening","open_peer_review","open_assessment","register_product","edit_application","CreateApplication","editData","display","onBack","onUpdate","reference_number","RegisterProduct","distribution_category","name_of_marketing_authorization_holder","name_of_the_active_ingredient","pack_size","pack_type","registration_number","shelf_life_in_month","storage_statement","therapeutic_indication","date_ma_certificate_issued_to_applicant","product_category","onClose","applicant_address","applicant_name","created_by","local_technical_representative","manufacturer_name_and_country","manufacturing_site_address","product_brand_name","product_common_name","product_dosage_form","product_strength","submission_date","FormInput","error_key_name","onCloseError","saveProductDetails","FC_RegisterProduct","_CreateApplication","auth","user","user_id","FC_CreateApplication","connect","system"],"mappings":"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","file":"static/js/0.e485a796.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\";\n\ninterface MainContainerProps {\n  className?: string;\n  children: ReactNode;\n}\n\nconst MainContainer = (props: MainContainerProps) => {\n  return (\n    <div className={`bg-white rounded p-2 md:p-3 ${props.className}`}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default MainContainer;\n","import React from \"react\";\ninterface LoadingProps {}\nconst Loading = (props: LoadingProps) => {\n  return (\n    <div className=\"w-full mx-auto mb-12 px-4\">\n      <div className=\"animate-pulse flex space-x-4\">\n        <div className=\"flex-1 space-y-4 py-1\">\n          <div className={`h-2 bg-gray-200 rounded w-3/4`}></div>\n          <div className=\"space-y-2\">\n            <div className={`h-2 bg-gray-200 rounded`}></div>\n            <div className={`h-2 bg-gray-200 rounded w-5/6`}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loading;\n","/**\n * @description Modal design\n * @done_by Niyongabo\n */\nimport { MdClose } from \"react-icons/md\";\n\nexport enum Themes {\n  default = \"default\",\n  primary = \"primary\",\n  secondary = \"secondary\",\n  danger = \"danger\",\n  success = \"success\",\n  warning = \"warning\",\n}\n\nexport enum ModalMarginTop {\n  none = \"top-0\",\n  small = \"top-28\",\n  medium = \"top-1/3\",\n  large = \"top-1/2\",\n  extra = \"top-2/3\",\n}\n\nexport enum ModalSize {\n  small = \"max-w-sm\",\n  medium = \"max-w-screen-sm\",\n  large = \"max-w-screen-md\",\n  extraLarge = \"max-w-screen-lg\",\n  maxWidth = \"max-w-screen h-full\",\n}\n\ninterface ModalInterface {\n  title?: any;\n  backDrop: boolean;\n  theme: Themes;\n  close: Function;\n  backDropClose: boolean;\n  footer?: any;\n  children: any;\n  widthSizeClass: ModalSize;\n  displayClose: boolean;\n  padding: { title?: boolean; body?: boolean; footer?: boolean };\n  marginTop?: ModalMarginTop;\n}\n\nconst Modal = (props: ModalInterface): JSX.Element => {\n  const {\n    title,\n    backDrop,\n    theme,\n    close,\n    backDropClose,\n    widthSizeClass,\n    displayClose,\n    padding = { title: true, body: true, footer: true },\n  }: ModalInterface = props;\n\n  let themeColor: string;\n\n  switch (theme) {\n    case Themes.primary:\n      themeColor = \"blue-500\";\n      break;\n    case Themes.secondary:\n      themeColor = \"gray-300\";\n      break;\n    case Themes.danger:\n      themeColor = \"red-500\";\n      break;\n    case Themes.success:\n      themeColor = \"primary-800\";\n      break;\n    case Themes.warning:\n      themeColor = \"yellow-500\";\n      break;\n    default:\n      themeColor = \"white\";\n      break;\n  }\n  return (\n    <>\n      <div\n        onClick={(): void => backDropClose && close()}\n        className={`z-50 animate__animated animate__fadeIn animate__faster modal fixed bg-black bg-opacity-${\n          backDrop === true ? \"60\" : \"0\"\n        }`}\n      ></div>\n      <div\n        className={`z-50 fixed items-center justify-items-center ${\n          props.marginTop === undefined ? ModalMarginTop.none : props.marginTop\n        } left-0 right-0 bottom-0 bg-white rounded shadow-xl self-center ${widthSizeClass} animate__animated ${\n          props.marginTop !== undefined &&\n          props.marginTop !== ModalMarginTop.none\n            ? \"animate__fadeInUp\"\n            : \"animate__zoomIn\"\n        } animate__faster`}\n        style={{\n          width: \"100%\",\n          maxHeight: \"99vh\",\n          height: `${\n            widthSizeClass === ModalSize.maxWidth\n              ? props.marginTop === undefined\n                ? \"100%\"\n                : \"unset\"\n              : \"fit-content\"\n          }`,\n          overflowY: \"auto\",\n          margin: \"auto\",\n          zIndex: 99999999,\n        }}\n      >\n        <div\n          className={`flex justify-between bg-${themeColor} ${\n            padding.title === true ? \"py-4 px-4\" : \"\"\n          } rounded-t text-${\n            theme === Themes.default || theme === Themes.secondary\n              ? \"black\"\n              : \"white\"\n          }`}\n        >\n          {!title || title === \"\" ? (\n            <div></div>\n          ) : (\n            <h4 className={`text-lg font-bold `}>{title}</h4>\n          )}\n          {displayClose === false ? (\n            \"\"\n          ) : (\n            <div className=\"hover:text-red-600 hover:bg-red-100 rounded-full p-1 h-8 w-8\">\n              <MdClose\n                className=\"cursor-pointer font-extrabold text-2xl\"\n                onClick={(): void => close()}\n              />\n            </div>\n          )}\n        </div>\n        <div\n          className={`space-x-3 ${padding.body === true ? \"py-4 px-4\" : \"\"}`}\n        >\n          <div>{props.children !== \"\" ? props.children : \"\"}</div>\n        </div>\n        {props.footer !== undefined && props.footer !== \"\" ? (\n          <div\n            className={`flex float-right ${\n              padding.footer === true ? \"py-4 px-4\" : \"\"\n            }`}\n          >\n            {props.footer}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport {\n  ApplicationDetailsInterface,\n  AssessmentOutcomeValues,\n  LevelsValues,\n  RoundValues,\n  AssessmentInterface,\n  ScreeningStatusValues,\n  PeerReviewStatusValues,\n  RegistrationStates,\n} from \"../../actions\";\nimport { BiAnalyse, BiLoaderCircle } from \"react-icons/bi\";\nimport { IoMdCheckmarkCircle } from \"react-icons/io\";\nimport { IoBanOutline } from \"react-icons/io5\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport {\n  DATE,\n  GetDaysFromTwoDates,\n  timestampToDate,\n} from \"../../utils/functions\";\nimport { GetLastScreeningValue } from \"./Screening\";\nimport { GetLastPeerReviewValue } from \"./PeerReview\";\n\ninterface AssessmentProps {\n  data: ApplicationDetailsInterface;\n  openAssessmentDetails: (status: boolean) => void;\n}\ninterface AssessmentState {\n  loading: boolean;\n  error: {\n    target: \"assessment_status\";\n    msg: string;\n  } | null;\n}\n\nexport const GetLastAssessmentValue = (assessments: AssessmentInterface[]) => {\n  const temp = [];\n  let i = assessments.length === 0 ? -1 : assessments.length - 1;\n  while (i >= 0) {\n    temp.push(assessments[i]);\n    i = i - 1;\n  }\n  // lEVEL 2\n  const round1DataL2 = temp.filter(\n    (itm) =>\n      itm.assessment_round === RoundValues.ROUND_ONE &&\n      itm.assessment_level === LevelsValues.LEVEL_TWO\n  );\n  const round2DataL2 = temp.filter(\n    (itm) =>\n      itm.assessment_round === RoundValues.ROUND_TWO &&\n      itm.assessment_level === LevelsValues.LEVEL_TWO\n  );\n  const round3DataL2 = temp.filter(\n    (itm) =>\n      itm.assessment_round === RoundValues.ROUND_THREE &&\n      itm.assessment_level === LevelsValues.LEVEL_TWO\n  );\n  // lEVEL 1\n  const round1DataL1 = temp.filter(\n    (itm) =>\n      itm.assessment_round === RoundValues.ROUND_ONE &&\n      itm.assessment_level === LevelsValues.LEVEL_ONE\n  );\n  const round2DataL1 = temp.filter(\n    (itm) =>\n      itm.assessment_round === RoundValues.ROUND_TWO &&\n      itm.assessment_level === LevelsValues.LEVEL_ONE\n  );\n  const round3DataL1 = temp.filter(\n    (itm) =>\n      itm.assessment_round === RoundValues.ROUND_THREE &&\n      itm.assessment_level === LevelsValues.LEVEL_ONE\n  );\n  if (\n    round1DataL2.length <= 0 &&\n    round2DataL2.length <= 0 &&\n    round3DataL2.length <= 0 &&\n    round1DataL1.length <= 0 &&\n    round2DataL1.length <= 0 &&\n    round3DataL1.length <= 0\n  ) {\n    return null;\n  }\n\n  const RoundThree =\n    round3DataL2.length > 0\n      ? round3DataL2[round3DataL2.length - 1]\n      : round3DataL1.length > 0\n      ? round3DataL1[round3DataL1.length - 1]\n      : null;\n  const RoundTwo =\n    round2DataL2.length > 0\n      ? round2DataL2[round2DataL2.length - 1]\n      : round2DataL1.length > 0\n      ? round2DataL1[round2DataL1.length - 1]\n      : null;\n  const RoundOne =\n    round1DataL2.length > 0\n      ? round1DataL2[round1DataL2.length - 1]\n      : round1DataL1.length > 0\n      ? round1DataL1[round1DataL1.length - 1]\n      : null;\n\n  const res =\n    RoundThree !== null\n      ? RoundThree\n      : RoundTwo !== null\n      ? RoundTwo\n      : RoundOne !== null\n      ? RoundOne\n      : null;\n  return res;\n};\n\nexport const getLastQuery = (data: ApplicationDetailsInterface) => {\n  const last_assessment = GetLastAssessmentValue(data.assessments);\n  if (last_assessment !== undefined) {\n    const last_query = data.assessmentqueries.find(\n      (itm) => itm.assessment_round === last_assessment?.assessment_round\n    );\n    if (last_query !== undefined) {\n      return last_query;\n    }\n  }\n  return null;\n};\n\n// Get time taken to respond query\n\nexport const queryAnsweringNumberOfDays = (\n  data: ApplicationDetailsInterface\n): number => {\n  const last_assessment = GetLastAssessmentValue(data.assessments);\n  if (last_assessment !== null) {\n    const last_query = data.assessmentqueries.find(\n      (itm) => itm.assessment_round === last_assessment?.assessment_round\n    );\n\n    if (last_query !== undefined) {\n      const query_issued_date = last_query.query_issued_date;\n      const query_response_date = last_query.query_response_date;\n      const ToDayDate = new Date();\n      let test = 0;\n      if (query_response_date === null || query_response_date === \"\") {\n        test = GetDaysFromTwoDates(\n          DATE(query_issued_date, \"MM/DD/YYYY\"),\n          DATE(timestampToDate(ToDayDate).fullDATE, \"MM/DD/YYYY\")\n        );\n      } else {\n        test = GetDaysFromTwoDates(\n          DATE(query_issued_date, \"MM/DD/YYYY\"),\n          DATE(query_response_date, \"MM/DD/YYYY\")\n        );\n      }\n      return test;\n    }\n  }\n  return 0;\n};\n\nexport const validateQuery90Days = (\n  data: ApplicationDetailsInterface\n): \"VALID\" | \"INVALID\" => {\n  const lastQuery = getLastQuery(data);\n  if (\n    lastQuery !== null &&\n    (lastQuery.query_response_date === null ||\n      lastQuery.query_response_date === \"\")\n  ) {\n    if (queryAnsweringNumberOfDays(data) > 90) {\n      return \"INVALID\";\n    }\n  }\n  return \"VALID\";\n};\n\nexport const GetAssessmentStatusName = (status: AssessmentOutcomeValues) => {\n  switch (status) {\n    case AssessmentOutcomeValues.NR:\n      return \"NOT RECOMMENDED\";\n    case AssessmentOutcomeValues.OG:\n      return \"ONGOING\";\n    case AssessmentOutcomeValues.R:\n      return \"RECOMMENDED\";\n  }\n};\n\nexport const GetLevelName = (level: LevelsValues) => {\n  if (level === LevelsValues.LEVEL_ONE) {\n    return \"First assessment\";\n  }\n  return \"Second assessment\";\n};\n\nexport const GetRoundName = (round: RoundValues) => {\n  if (round === RoundValues.ROUND_ONE) {\n    return \"First round\";\n  }\n  if (round === RoundValues.ROUND_TWO) {\n    return \"Second round\";\n  }\n  return \"Third round\";\n};\n\nexport enum CurrentStatusEnum {\n  NOT_SCREENED = \"NOT SCREENED\",\n  SCREENING_PROCESS = \"SCREENING PROCESS\",\n  NOT_ASSESSED = \"NOT ASSESSED\",\n  WAITING_FOR_ASSESSMENT = \"WAITING FOR ASSESSMENT\",\n  WAITING_TO_SEND_QUERY_ISSUE = \"WAITING TO SEND QUERY ISSUE\",\n  WAITING_FOR_QUERY_RESPONSE = \"WAITING FOR QUERY RESPONSE\",\n  QUERY_RESPONSE_WAITING_FOR_ASSESSOR = \"QUERY RESPONSE WAITING FOR ASSESSOR\",\n  WAITING_FOR_PEER_REVIEW = \"WAITING FOR PEER REVIEW\",\n  WAITING_FOR_REGISTRATION = \"WAITING FOR REGISTRATION\",\n  NULL = \"NULL\",\n}\n\nexport const ApplicationCurrentState = (\n  data: ApplicationDetailsInterface\n): CurrentStatusEnum => {\n  if (GetLastScreeningValue(data.screenings) === null) {\n    return CurrentStatusEnum.NOT_SCREENED;\n  }\n  if (\n    GetLastScreeningValue(data.screenings) !== null &&\n    GetLastScreeningValue(data.screenings)!.screening_status ===\n      ScreeningStatusValues.PROGRESS_IN_SCREENING\n  ) {\n    return CurrentStatusEnum.SCREENING_PROCESS;\n  }\n  if (\n    data.assessments.length === 0 &&\n    GetLastScreeningValue(data.screenings) !== null &&\n    GetLastScreeningValue(data.screenings)!.screening_status ===\n      ScreeningStatusValues.SCREENING_COMPLETED\n  ) {\n    return CurrentStatusEnum.NOT_ASSESSED;\n  }\n\n  if (\n    data.assessments.length % 2 !== 0 &&\n    GetLastAssessmentValue(data.assessments) !== null\n  ) {\n    return CurrentStatusEnum.WAITING_FOR_ASSESSMENT;\n  }\n\n  if (\n    data.assessments.length % 2 === 0 &&\n    getLastQuery(data) === null &&\n    GetLastAssessmentValue(data.assessments) !== null &&\n    GetLastAssessmentValue(data.assessments)!.assessment_outcome ===\n      AssessmentOutcomeValues.OG &&\n    GetLastAssessmentValue(data.assessments)?.assessment_level ===\n      LevelsValues.LEVEL_TWO\n  ) {\n    return CurrentStatusEnum.WAITING_TO_SEND_QUERY_ISSUE;\n  }\n  if (\n    data.assessments.length % 2 === 0 &&\n    data.assessmentqueries.length > 0 &&\n    GetLastAssessmentValue(data.assessments) !== null &&\n    GetLastAssessmentValue(data.assessments)!.assessment_outcome ===\n      AssessmentOutcomeValues.OG &&\n    getLastQuery(data) !== null &&\n    (getLastQuery(data)!.query_response_date === null ||\n      getLastQuery(data)!.query_response_date === \"\")\n  ) {\n    return CurrentStatusEnum.WAITING_FOR_QUERY_RESPONSE;\n  }\n  if (\n    data.assessments.length > 1 &&\n    data.assessments.length > 1 &&\n    GetLastAssessmentValue(data.assessments) !== null &&\n    GetLastAssessmentValue(data.assessments)!.assessment_outcome ===\n      AssessmentOutcomeValues.OG &&\n    getLastQuery(data) !== null &&\n    getLastQuery(data)!.query_response_date !== null &&\n    getLastQuery(data)!.query_response_date !== \"\"\n  ) {\n    return CurrentStatusEnum.QUERY_RESPONSE_WAITING_FOR_ASSESSOR;\n  }\n  if (\n    GetLastAssessmentValue(data.assessments)?.assessment_outcome ===\n      AssessmentOutcomeValues.R &&\n    GetLastPeerReviewValue(data) === null\n  ) {\n    return CurrentStatusEnum.WAITING_FOR_PEER_REVIEW;\n  }\n  if (\n    GetLastAssessmentValue(data.assessments)?.assessment_outcome ===\n      AssessmentOutcomeValues.R &&\n    GetLastPeerReviewValue(data) !== null &&\n    GetLastPeerReviewValue(data)?.status.toLocaleLowerCase() ===\n      PeerReviewStatusValues.approved.toLocaleLowerCase() &&\n    data.registration_Status !== RegistrationStates.REGISTERED\n  ) {\n    return CurrentStatusEnum.WAITING_FOR_REGISTRATION;\n  }\n  return CurrentStatusEnum.NULL;\n};\n\nexport const GetDaysQueryWaitingForAssessment = (\n  data: ApplicationDetailsInterface\n) => {\n  if (\n    ApplicationCurrentState(data) ===\n    CurrentStatusEnum.QUERY_RESPONSE_WAITING_FOR_ASSESSOR\n  ) {\n    // Get last query\n    const lastQuery = getLastQuery(data);\n    if (\n      lastQuery !== null &&\n      lastQuery.query_response_date !== null &&\n      lastQuery.query_response_date !== \"\"\n    ) {\n      const last_date = lastQuery.query_response_date;\n      const ToDayDate = new Date();\n      return GetDaysFromTwoDates(\n        DATE(last_date, \"MM/DD/YYYY\"),\n        DATE(timestampToDate(ToDayDate).fullDATE, \"MM/DD/YYYY\")\n      );\n    }\n  }\n  return 0;\n};\n\nexport const FCGetAssessmentStatusElement = (props: {\n  assessment_status: AssessmentOutcomeValues;\n  loading: boolean;\n}) => {\n  if (props.assessment_status === AssessmentOutcomeValues.OG) {\n    return (\n      <div className=\"flex flex-row items-center gap-2 rounded-full p-1 bg-primary-100 text-primary-900 border border-blue-400 font-bold text-xs pr-3 w-max h-max\">\n        {props.loading === true && (\n          <div>\n            <BiLoaderCircle className={`text-2xl animate-spin`} />\n          </div>\n        )}\n        <div>\n          {props.loading === false ? (\n            <div className=\"px-4 py-0\">\n              {GetAssessmentStatusName(props.assessment_status)}\n            </div>\n          ) : (\n            GetAssessmentStatusName(props.assessment_status)\n          )}\n        </div>\n      </div>\n    );\n  }\n  if (props.assessment_status === AssessmentOutcomeValues.R) {\n    return (\n      <div className=\"flex flex-row items-center gap-2 rounded-full p-1 bg-green-50 text-green-700 border border-green-400 font-bold text-xs pr-3 w-max h-max\">\n        <div>\n          <IoMdCheckmarkCircle className=\"text-2xl\" />\n        </div>\n        <div>{GetAssessmentStatusName(props.assessment_status)}</div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"flex flex-row items-center gap-2 rounded-full p-1 bg-red-50 text-red-700 border border-red-400 font-bold text-xs pr-3 w-max h-max\">\n      <div>\n        <IoBanOutline className=\"text-xl\" />\n      </div>\n      <div>{GetAssessmentStatusName(props.assessment_status)}</div>\n    </div>\n  );\n};\n\nexport class Assessment extends Component<AssessmentProps, AssessmentState> {\n  constructor(props: AssessmentProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: null,\n    };\n  }\n\n  FilterByRounds = (selected_round: RoundValues) => {\n    return this.props.data.assessments.filter(\n      (itm) => itm.assessment_round === selected_round\n    );\n  };\n  FindDataByLevelRound = (level: LevelsValues, selected_round: RoundValues) => {\n    const temp = [];\n    let i =\n      this.props.data.assessments.length === 0\n        ? -1\n        : this.props.data.assessments.length - 1;\n    while (i >= 0) {\n      temp.push(this.props.data.assessments[i]);\n      i = i - 1;\n    }\n    const res = temp.find(\n      (itm) =>\n        itm.assessment_level === level &&\n        itm.assessment_round === selected_round\n    );\n    if (res === undefined) {\n      return null;\n    }\n    return res;\n  };\n  validateAssessmentQuery = () => {\n    if (\n      this.props.data.assessmentqueries.length > 0 &&\n      getLastQuery(this.props.data) !== null &&\n      validateQuery90Days(this.props.data) === \"INVALID\" &&\n      (getLastQuery(this.props.data)!.query_response_date === null ||\n        getLastQuery(this.props.data)!.query_response_date !== \"\")\n    ) {\n      return false;\n    }\n    return true;\n  };\n  render() {\n    return (\n      <div>\n        <div\n          onClick={() => this.props.openAssessmentDetails(true)}\n          className=\"rounded-md p-2 flex flex-row gap-2 justify-between bg-white border hover:border-primary-300 hover:bg-primary-50 hover:text-primary-900 group cursor-pointer\"\n        >\n          <div className=\"flex flex-row gap-2 justify-between items-center w-full\">\n            <div className=\"flex flex-row items-center gap-3\">\n              <div className=\"\">\n                <div\n                  className={`h-16 w-16 rounded-md border ${\n                    GetLastAssessmentValue(this.props.data.assessments) === null\n                      ? \"bg-gray-100 border-gray-100\"\n                      : this.validateAssessmentQuery() === false\n                      ? \"bg-red-100 border-red-300\"\n                      : \"bg-primary-100 border-primary-100\"\n                  } group-hover:bg-white group-hover:border-primary-100 flex items-center justify-center`}\n                >\n                  <BiAnalyse\n                    className={`text-5xl ${\n                      GetLastAssessmentValue(this.props.data.assessments) ===\n                      null\n                        ? \"text-gray-300\"\n                        : this.validateAssessmentQuery() === false\n                        ? \"text-red-700\"\n                        : \"text-primary-700\"\n                    } group-hover:text-primary-800`}\n                  />\n                </div>\n              </div>\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-base cursor-pointer\">\n                  {GetLastAssessmentValue(this.props.data.assessments) === null\n                    ? \"Assessment progress\"\n                    : GetLevelName(\n                        GetLastAssessmentValue(this.props.data.assessments)!\n                          .assessment_level\n                      )}\n                </span>\n                <span className=\"text-xs font-light\">\n                  Current level of assessment\n                </span>\n                {GetLastAssessmentValue(this.props.data.assessments) ===\n                null ? (\n                  <div className=\"font-semibold text-sm text-gray-400 group-hover:text-yellow-700\">\n                    No details found!\n                  </div>\n                ) : (\n                  <div className=\"text-xs font-light flex flex-row items-center gap-2\">\n                    {this.validateAssessmentQuery() === false ? (\n                      <div className=\"px-2 py-1 w-max rounded-full font-bold text-xs bg-red-700 text-white animate__animated animate__bounceIn animate__infinite\">\n                        Feedback waiting months:{\" \"}\n                        {Math.round(\n                          queryAnsweringNumberOfDays(this.props.data) / 30\n                        )}\n                      </div>\n                    ) : (\n                      GetDaysQueryWaitingForAssessment(this.props.data) <=\n                        60 && (\n                        <div>\n                          <div className=\"rounded-full bg-primary-100 text-primary-900 font-semibold w-max px-2 py-1 text-xs group-hover:bg-primary-800 group-hover:text-white\">\n                            {GetRoundName(\n                              GetLastAssessmentValue(\n                                this.props.data.assessments\n                              )!.assessment_round\n                            )}\n                          </div>\n                        </div>\n                      )\n                    )}\n                    {/* Check queries */}\n                    {ApplicationCurrentState(this.props.data) ===\n                      CurrentStatusEnum.QUERY_RESPONSE_WAITING_FOR_ASSESSOR &&\n                      GetDaysQueryWaitingForAssessment(this.props.data) >\n                        60 && (\n                        <div className=\"px-2 py-1 w-max rounded-full font-bold text-xs bg-red-700 text-white animate__animated animate__bounceIn animate__infinite\">\n                          Query is waiting for :{\" \"}\n                          {Math.round(\n                            GetDaysQueryWaitingForAssessment(this.props.data) /\n                              30\n                          )}{\" \"}\n                          months\n                        </div>\n                      )}\n                  </div>\n                )}\n              </div>\n            </div>\n            {/* Status */}\n            <div>\n              {GetLastAssessmentValue(this.props.data.assessments) === null ? (\n                <div className=\"flex flex-row items-center gap-1 rounded-full p-1 bg-yellow-50 text-yellow-700 border border-yellow-200 font-bold text-xs pr-3\">\n                  <div>\n                    <RiErrorWarningLine className=\"text-2xl animate__animated animate__zoomIn animate__infinite\" />\n                  </div>\n                  <div>{\"Not assessed\"}</div>\n                </div>\n              ) : (\n                GetLastAssessmentValue(this.props.data.assessments) !==\n                  null && (\n                  <FCGetAssessmentStatusElement\n                    assessment_status={\n                      GetLastAssessmentValue(this.props.data.assessments)!\n                        .assessment_outcome\n                    }\n                    loading={\n                      GetLastAssessmentValue(this.props.data.assessments)\n                        ?.assessment_level !== LevelsValues.LEVEL_ONE\n                        ? false\n                        : true\n                    }\n                  />\n                )\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Assessment;\n","import React, { Component } from \"react\";\nimport {\n  ApplicationDetailsInterface,\n  ScreeningInterface,\n  ScreeningStatusValues,\n} from \"../../actions\";\nimport { BiLoaderCircle } from \"react-icons/bi\";\nimport { IoMdCheckmarkCircle } from \"react-icons/io\";\nimport { IoBanOutline, IoDocumentAttachOutline } from \"react-icons/io5\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport {\n  DATE,\n  GetDaysFromTwoDates,\n  timestampToDate,\n} from \"../../utils/functions\";\n\nexport const GetLastScreeningValue = (screenings: ScreeningInterface[]) => {\n  if (screenings.length <= 0) {\n    return null;\n  }\n  const res = screenings[screenings.length - 1];\n  return res;\n};\n\nexport const screeningNumberOfDays = (\n  screenings: ScreeningInterface[]\n): number => {\n  const feedback_date =\n    GetLastScreeningValue(screenings)!.date_of_screening_feedback;\n  const response_date =\n    GetLastScreeningValue(screenings)!.date_of_screening_response;\n  const ToDayDate = new Date();\n  console.log(\"ToDayDate: \", ToDayDate);\n  console.log(\n    \"New date: \",\n    DATE(timestampToDate(ToDayDate).fullDATE, \"MM/DD/YYYY\"),\n    DATE(response_date, \"MM/DD/YYYY\")\n  );\n\n  if (\n    (response_date === null || response_date === \"\") &&\n    feedback_date !== null\n  ) {\n    return GetDaysFromTwoDates(\n      DATE(feedback_date!, \"MM/DD/YYYY\"),\n      DATE(timestampToDate(ToDayDate).fullDATE, \"MM/DD/YYYY\")\n    );\n  }\n  return feedback_date === null\n    ? 0\n    : GetDaysFromTwoDates(\n        DATE(feedback_date!.toString(), \"MM/DD/YYYY\"),\n        DATE(response_date, \"MM/DD/YYYY\")\n      );\n};\n\nexport const validateScreening30Days = (\n  screenings: ScreeningInterface[]\n): \"VALID\" | \"INVALID\" => {\n  const date_of_screening_response =\n    GetLastScreeningValue(screenings)!.date_of_screening_response;\n  if (\n    date_of_screening_response === null ||\n    date_of_screening_response === \"\"\n  ) {\n    if (screeningNumberOfDays(screenings) > 30) {\n      return \"INVALID\";\n    }\n  }\n  return \"VALID\";\n};\n\ninterface ScreeningProps {\n  data: ApplicationDetailsInterface;\n  openScreeningDetails: (status: boolean) => void;\n}\ninterface ScreeningState {\n  loading: boolean;\n  error: {\n    target:\n      | \"date_of_screening\"\n      | \"date_of_screening_response\"\n      | \"screening_status\";\n    msg: string;\n  } | null;\n}\n\nexport const FCGetScreeningStatusElement = (props: {\n  screening_status: ScreeningStatusValues;\n}) => {\n  if (props.screening_status === ScreeningStatusValues.PROGRESS_IN_SCREENING) {\n    return (\n      <div className=\"flex flex-row items-center gap-2 rounded-full p-1 bg-primary-100 text-primary-900 border border-primary-300 font-bold text-xs pr-3 w-max\">\n        <div>\n          <BiLoaderCircle className=\"text-2xl animate-spin\" />\n        </div>\n        <div>{props.screening_status}</div>\n      </div>\n    );\n  }\n  if (props.screening_status === ScreeningStatusValues.SCREENING_COMPLETED) {\n    return (\n      <div className=\"flex flex-row items-center gap-2 rounded-full p-1 bg-green-50 text-green-700 border border-green-400 font-bold text-xs pr-3 w-max\">\n        <div>\n          <IoMdCheckmarkCircle className=\"text-2xl\" />\n        </div>\n        <div>{props.screening_status}</div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"flex flex-row items-center gap-2 rounded-full p-1 bg-red-50 text-red-700 border border-red-400 font-bold text-xs pr-3 w-max\">\n      <div>\n        <IoBanOutline className=\"text-2xl\" />\n      </div>\n      <div>{props.screening_status}</div>\n    </div>\n  );\n};\n\nexport class Screening extends Component<ScreeningProps, ScreeningState> {\n  constructor(props: ScreeningProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: null,\n    };\n  }\n  GetLastScreeningValue = () => {\n    if (this.props.data.screenings.length <= 0) {\n      return null;\n    }\n    const res =\n      this.props.data.screenings[this.props.data.screenings.length - 1];\n    return res;\n  };\n\n  screeningNumberOfDays = (): number => {\n    return screeningNumberOfDays(this.props.data.screenings);\n  };\n\n  validateScreening30Days = (): \"VALID\" | \"INVALID\" => {\n    return validateScreening30Days(this.props.data.screenings);\n  };\n  render() {\n    return (\n      <div>\n        <div\n          onClick={() => this.props.openScreeningDetails(true)}\n          className=\"rounded-md p-2 flex flex-row gap-2 justify-between bg-white border hover:border-primary-300 hover:bg-primary-50 hover:text-primary-900 group cursor-pointer\"\n        >\n          <div className=\"flex flex-row items-center gap-3\">\n            <div className=\"\">\n              <div\n                className={`h-16 w-16 rounded-md border ${\n                  this.GetLastScreeningValue() === null\n                    ? \"bg-gray-100 border-gray-100\"\n                    : this.validateScreening30Days() === \"INVALID\"\n                    ? \"bg-red-100 border-red-300\"\n                    : \"bg-primary-100 border-primary-100\"\n                } group-hover:bg-white group-hover:border-primary-100 flex items-center justify-center`}\n              >\n                <IoDocumentAttachOutline\n                  className={`text-5xl ${\n                    this.GetLastScreeningValue() === null\n                      ? \"text-gray-300\"\n                      : this.validateScreening30Days() === \"INVALID\"\n                      ? \"text-red-700 animate__animated animate__bounceIn\"\n                      : \"text-primary-700\"\n                  } group-hover:text-primary-800`}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col\">\n              <span className=\"font-bold text-base cursor-pointer hover:text-primary-800\">\n                Screening progress\n              </span>\n              {this.GetLastScreeningValue() === null ? (\n                <div className=\"font-semibold text-sm text-gray-400 group-hover:text-yellow-700\">\n                  No details found!\n                </div>\n              ) : (\n                <div>\n                  {this.GetLastScreeningValue()!.date_of_screening_feedback !==\n                    null && (\n                    <div className=\"flex flex-row items-center text-xs gap-2\">\n                      <span className=\"font-light group-hover:text-primary-900\">\n                        Feedback date:{\" \"}\n                      </span>\n                      <span className=\"font-semibold\">\n                        {DATE(\n                          this.GetLastScreeningValue()!\n                            .date_of_screening_feedback!\n                        )}\n                      </span>\n                    </div>\n                  )}\n                  {this.GetLastScreeningValue()!.date_of_screening_response ===\n                  null ? (\n                    <div className=\"font-semibold text-sm text-gray-400 group-hover:text-yellow-700\">\n                      No response found!\n                    </div>\n                  ) : (\n                    <div className=\"flex flex-row items-center text-xs gap-2\">\n                      {/* <span className=\"font-light group-hover:text-primary-900\">\n                        Response date:{\" \"}\n                      </span>\n                      <span className=\"font-semibold\">\n                        {DATE(\n                          this.GetLastScreeningValue()!\n                            .date_of_screening_response!\n                        )}\n                      </span> */}\n                    </div>\n                  )}\n                  {this.GetLastScreeningValue() !== null &&\n                    this.GetLastScreeningValue()!.date_of_screening_response !==\n                      null &&\n                    this.GetLastScreeningValue()!.date_of_screening_feedback !==\n                      null &&\n                    this.GetLastScreeningValue()!.date_of_screening_feedback !==\n                      \"\" && (\n                      <div\n                        className={`text-xs font-bold px-2 py-1 w-max rounded-full bg-primary-100 text-primary-900 group-hover:bg-primary-800 group-hover:text-white`}\n                      >\n                        Number of days: {this.screeningNumberOfDays()}\n                      </div>\n                    )}\n                  {this.GetLastScreeningValue() !== null &&\n                    (this.GetLastScreeningValue()!\n                      .date_of_screening_response === null ||\n                      this.GetLastScreeningValue()!\n                        .date_of_screening_response === \"\") && (\n                      <div\n                        className={`text-xs font-bold px-2 py-1 w-max rounded-full ${\n                          this.validateScreening30Days() === \"VALID\"\n                            ? \"bg-primary-100 text-primary-900 group-hover:bg-primary-800 group-hover:text-white\"\n                            : \"bg-red-600 text-white animate__animated animate__jello animate__infinite\"\n                        }`}\n                      >\n                        Days passed: {this.screeningNumberOfDays()}\n                      </div>\n                    )}\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"flex flex-col items-end justify-center gap-2\">\n            {this.GetLastScreeningValue() === null ? (\n              <div className=\"flex flex-row items-center gap-1 rounded-full p-1 bg-yellow-50 text-yellow-700 border border-yellow-200 font-bold text-xs pr-3\">\n                <div>\n                  <RiErrorWarningLine className=\"text-2xl animate__animated animate__zoomIn animate__infinite\" />\n                </div>\n                <div>{\"Not screened\"}</div>\n              </div>\n            ) : (\n              <FCGetScreeningStatusElement\n                screening_status={\n                  this.GetLastScreeningValue()!.screening_status\n                }\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Screening;\n","import React, { Component } from \"react\";\nimport {\n  ApplicationDetailsInterface,\n  PeerReviewStatusValues,\n} from \"../../actions\";\nimport { IoMdCheckmarkCircle } from \"react-icons/io\";\nimport { IoBanOutline } from \"react-icons/io5\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport { MdLockOpen } from \"react-icons/md\";\n\ninterface PeerReviewProps {\n  data: ApplicationDetailsInterface;\n  openPeerReview: (status: boolean) => void;\n}\ninterface ScreeningState {\n  loading: boolean;\n  error: {\n    target:\n      | \"date_of_screening\"\n      | \"date_of_screening_response\"\n      | \"screening_status\";\n    msg: string;\n  } | null;\n}\n\nexport const GetLastPeerReviewValue = (data: ApplicationDetailsInterface) => {\n  if (data.peerreviews.length <= 0) {\n    return null;\n  }\n  const res = data.peerreviews[data.peerreviews.length - 1];\n  return res;\n};\n\nexport const FCGetPeerReviewStatusElement = (props: {\n  peerReview_status: PeerReviewStatusValues;\n}) => {\n  if (\n    props.peerReview_status.toUpperCase() ===\n    PeerReviewStatusValues.incomplete.toUpperCase()\n  ) {\n    return (\n      <div className=\"flex flex-row items-center gap-2 rounded-full p-1 bg-gray-50 text-gray-700 border border-gray-300 font-bold text-xs pr-3 w-max\">\n        <div>\n          <RiErrorWarningLine className=\"text-2xl animate-pulse\" />\n        </div>\n        <div>{props.peerReview_status.toUpperCase()}</div>\n      </div>\n    );\n  }\n  if (\n    props.peerReview_status.toUpperCase() ===\n    PeerReviewStatusValues.approved.toUpperCase()\n  ) {\n    return (\n      <div className=\"flex flex-row items-center gap-2 rounded-full p-1 bg-green-50 text-green-700 border border-green-400 font-bold text-xs pr-3 w-max\">\n        <div>\n          <IoMdCheckmarkCircle className=\"text-2xl\" />\n        </div>\n        <div>{props.peerReview_status.toUpperCase()}</div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"flex flex-row items-center gap-2 rounded-full p-1 bg-red-50 text-red-700 border border-red-400 font-bold text-xs pr-3 w-max\">\n      <div>\n        <IoBanOutline className=\"text-2xl\" />\n      </div>\n      <div>{props.peerReview_status.toUpperCase()}</div>\n    </div>\n  );\n};\n\nexport class PeerReview extends Component<PeerReviewProps, ScreeningState> {\n  constructor(props: PeerReviewProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: null,\n    };\n  }\n  GetLastPeerReviewValue = () => {\n    if (this.props.data.peerreviews.length <= 0) {\n      return null;\n    }\n    const res =\n      this.props.data.peerreviews[this.props.data.peerreviews.length - 1];\n    return res;\n  };\n  render() {\n    return (\n      <div>\n        <div\n          onClick={() => this.props.openPeerReview(true)}\n          className=\"rounded-md p-2 flex flex-row gap-2 justify-between bg-white border hover:border-primary-300 hover:bg-primary-50 hover:text-primary-900 group cursor-pointer\"\n        >\n          <div className=\"flex flex-row items-center gap-3\">\n            <div className=\"\">\n              <div\n                className={`h-16 w-16 rounded-md border ${\n                  this.GetLastPeerReviewValue() === null\n                    ? \"bg-gray-100 border-gray-100\"\n                    : \"bg-primary-100 border-primary-100\"\n                } group-hover:bg-white group-hover:border-primary-100 flex items-center justify-center`}\n              >\n                <MdLockOpen\n                  className={`text-5xl ${\n                    this.GetLastPeerReviewValue() === null\n                      ? \"text-gray-300\"\n                      : \"text-primary-700\"\n                  } group-hover:text-primary-800`}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col\">\n              <span className=\"font-bold text-base cursor-pointer hover:text-primary-800\">\n                Peer review progress\n              </span>\n              {this.GetLastPeerReviewValue() === null ? (\n                <div className=\"font-semibold text-sm text-gray-400 group-hover:text-yellow-700\">\n                  No details found!\n                </div>\n              ) : (\n                <div>\n                  <div className=\"flex flex-col text-xs\">\n                    <span className=\" group-hover:text-primary-900\">\n                      Peer review comment:\n                    </span>\n                    {this.GetLastPeerReviewValue()!.comment !== \"\" ? (\n                      <span className=\"font-light\">\n                        {this.GetLastPeerReviewValue()!.comment}\n                      </span>\n                    ) : (\n                      <span className=\"font-semibold text-gray-400\">\n                        No comment found\n                      </span>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"flex flex-col items-end justify-center gap-2\">\n            {this.GetLastPeerReviewValue() === null ? (\n              <div className=\"flex flex-row items-center gap-1 rounded-full p-1 bg-yellow-50 text-yellow-700 border border-yellow-200 font-bold text-xs pr-3\">\n                <div>\n                  <RiErrorWarningLine className=\"text-2xl animate__animated animate__zoomIn animate__infinite\" />\n                </div>\n                <div>{\"Not reviewed\"}</div>\n              </div>\n            ) : (\n              <FCGetPeerReviewStatusElement\n                peerReview_status={this.GetLastPeerReviewValue()!.status}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PeerReview;\n","import React, { Component } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { BsArrowLeft, BsCheckCircleFill } from \"react-icons/bs\";\nimport { MdRadioButtonUnchecked, MdSave } from \"react-icons/md\";\nimport {\n  ApplicationDetailsInterface,\n  FC_UpdateScreening,\n  ScreeningStatusValues,\n} from \"../../../actions\";\nimport {\n  DATE,\n  GetDaysFromTwoDates,\n  timestampToDate,\n} from \"../../../utils/functions\";\nimport Alert, { AlertType } from \"../../Alert/Alert\";\n\ninterface EditScreeningProps {\n  onGoBack: () => void;\n  onSave: (reference_number: string) => void;\n  data: ApplicationDetailsInterface;\n  editScreening: \"FeedBack\" | \"Response\" | \"Status\";\n  modal: boolean;\n}\ninterface EditScreeningState {\n  loading: boolean;\n  success: string;\n  error: {\n    target:\n      | \"screening_feedback\"\n      | \"date_of_screening_feedback\"\n      | \"screening_response\"\n      | \"date_of_screening_response\"\n      | \"screening_status\"\n      | \"done_by\"\n      | \"done_at\"\n      | \"main\";\n    msg: string;\n  } | null;\n  application_id: string;\n  application_ref_number: string;\n  screening_feedback: string;\n  date_of_screening_feedback: string;\n  screening_response: string;\n  date_of_screening_response: string | null;\n  screening_status: ScreeningStatusValues;\n  done_by: string;\n  done_at: string;\n}\n\nexport class EditScreening extends Component<\n  EditScreeningProps,\n  EditScreeningState\n> {\n  constructor(props: EditScreeningProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: null,\n      success: \"\",\n      application_id: this.props.data.application_id,\n      application_ref_number: this.props.data.application_ref_number,\n      screening_feedback:\n        this.props.data.screenings.length === 0\n          ? \"\"\n          : this.props.data.screenings[this.props.data.screenings.length - 1]\n              .screening_feedback,\n      date_of_screening_feedback:\n        this.props.data.screenings.length === 0 ||\n        this.props.data.screenings[this.props.data.screenings.length - 1]\n          .date_of_screening_feedback === null\n          ? \"\"\n          : this.props.data.screenings[this.props.data.screenings.length - 1]\n              .date_of_screening_feedback!,\n      screening_response:\n        this.props.data.screenings.length === 0\n          ? \"\"\n          : this.props.data.screenings[this.props.data.screenings.length - 1]\n              .screening_response,\n      date_of_screening_response:\n        this.props.data.screenings.length === 0\n          ? \"\"\n          : this.props.data.screenings[this.props.data.screenings.length - 1]\n              .date_of_screening_response,\n      screening_status:\n        this.props.data.screenings.length === 0\n          ? ScreeningStatusValues.PROGRESS_IN_SCREENING\n          : this.props.data.screenings[this.props.data.screenings.length - 1]\n              .screening_status,\n      done_by:\n        this.props.data.screenings.length === 0 ||\n        this.props.data.screenings[this.props.data.screenings.length - 1]\n          .done_by === undefined\n          ? \"\"\n          : this.props.data.screenings[this.props.data.screenings.length - 1]\n              .done_by!,\n      done_at: \"\",\n    };\n  }\n  SubmitScreening = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.state.application_id === \"\") {\n      return this.setState({\n        error: { target: \"main\", msg: \"Please select application ID\" },\n      });\n    }\n    if (this.state.application_ref_number === \"\") {\n      return this.setState({\n        error: {\n          target: \"main\",\n          msg: \"Please select application reference number!\",\n        },\n      });\n    }\n    if (\n      this.state.date_of_screening_feedback === \"\" &&\n      this.props.editScreening === \"FeedBack\"\n    ) {\n      return this.setState({\n        error: {\n          target: \"date_of_screening_feedback\",\n          msg: \"Please select date of screening feedback!\",\n        },\n      });\n    }\n    if (\n      this.state.date_of_screening_response === \"\" &&\n      this.props.editScreening === \"Response\"\n    ) {\n      return this.setState({\n        error: {\n          target: \"date_of_screening_response\",\n          msg: \"Please select date of screening response!\",\n        },\n      });\n    }\n    if (\n      this.state.date_of_screening_response !== null &&\n      GetDaysFromTwoDates(\n        DATE(this.state.date_of_screening_response, \"MM/DD/YYYY\"),\n        DATE(timestampToDate(new Date()).fullDATE, \"MM/DD/YYYY\")\n      ) < 0\n    ) {\n      return this.setState({\n        error: {\n          target: \"date_of_screening_response\",\n          msg: \"Please this date should be less than or equal to today date!\",\n        },\n      });\n    }\n    if (this.state.done_by === \"\") {\n      return this.setState({\n        error: {\n          target: \"done_by\",\n          msg: \"Please type names of who did screening!\",\n        },\n      });\n    }\n    if (\n      this.state.date_of_screening_response !== \"\" &&\n      this.state.date_of_screening_response !== null &&\n      this.state.date_of_screening_feedback !== null &&\n      this.state.date_of_screening_feedback !== \"\"\n    ) {\n      if (\n        GetDaysFromTwoDates(\n          DATE(this.state.date_of_screening_feedback, \"MM/DD/YYYY\"),\n          DATE(this.state.date_of_screening_response, \"MM/DD/YYYY\")\n        ) < 0\n      ) {\n        return this.setState({\n          error: {\n            target: \"date_of_screening_feedback\",\n            msg: \"Please choose the correct date, the date should be greater than or equal to response date!\",\n          },\n        });\n      }\n    }\n    // Saving\n    this.setState({ loading: true });\n    const data_saved = {\n      application_id: this.state.application_id,\n      application_ref_number: this.state.application_ref_number,\n      date_of_screening_feedback:\n        this.state.date_of_screening_feedback === \"\" ||\n        this.state.date_of_screening_response === null\n          ? null\n          : DATE(this.state.date_of_screening_feedback, \"YYYY/MM/DD\"),\n      date_of_screening_response:\n        this.state.date_of_screening_response === \"\" ||\n        this.state.date_of_screening_response === null\n          ? null\n          : DATE(this.state.date_of_screening_response, \"YYYY/MM/DD\"),\n      screening_feedback:\n        this.state.screening_feedback === \"\"\n          ? \"Submitted with no comment\"\n          : this.state.screening_feedback,\n      screening_response:\n        this.state.screening_response === \"\"\n          ? \"Submitted with no comment\"\n          : this.state.screening_response,\n      screening_status: this.state.screening_status,\n      done_by: this.state.done_by,\n      done_at: this.state.done_at,\n    };\n    console.log(\"Submitted: \", data_saved);\n    FC_UpdateScreening(\n      data_saved,\n      (\n        loading: boolean,\n        feedback: {\n          type: \"success\" | \"error\";\n          msg: string;\n        } | null\n      ) => {\n        this.setState({\n          loading: loading,\n        });\n        if (loading === false) {\n          if (feedback !== null) {\n            if (feedback.type === \"success\") {\n              this.setState({\n                error: null,\n                success: feedback.msg,\n                date_of_screening_feedback: \"\",\n                date_of_screening_response: \"\",\n                screening_feedback: \"\",\n                screening_response: \"\",\n              });\n              //   OnSave\n              this.props.onSave(this.state.application_ref_number);\n            }\n            if (feedback.type === \"error\") {\n              this.setState({\n                error: {\n                  target: \"main\",\n                  msg: feedback.msg,\n                },\n                success: \"\",\n              });\n            }\n          }\n        }\n      }\n    );\n  };\n  render() {\n    return (\n      <div>\n        <div\n          className={`${\n            this.props.modal === true ? \"bg-gray-200\" : \"bg-white\"\n          } rounded-md p-3 animate__animated animate__fadeIn`}\n        >\n          {/* Title here */}\n          <div></div>\n          {/* Details */}\n          <div className=\"flex flex-row items-center gap-3\">\n            <div className=\"\">\n              <div\n                onClick={this.props.onGoBack}\n                className={`bg-gray-100 cursor-pointer hover:bg-primary-100 hover:text-primary-800 flex items-center justify-center h-10 w-10 rounded-full`}\n              >\n                <BsArrowLeft className=\"text-3xl\" />\n              </div>\n            </div>\n            <div className=\"flex flex-col\">\n              <span className=\"text-xl font-extrabold\">\n                Add screening {this.props.editScreening} information\n              </span>\n              <span className=\"text-xs\">\n                Fill the following fields to updated the system about screening\n              </span>\n            </div>\n          </div>\n          <form\n            onSubmit={this.SubmitScreening}\n            className=\"grid grid-cols-12 gap-3 mt-5\"\n          >\n            {this.props.editScreening === \"FeedBack\" && (\n              <div className=\"col-span-6\">\n                <div className=\"flex flex-col w-full\">\n                  <span className=\"text-sm\">Date of screening feedback</span>\n                  <input\n                    type=\"date\"\n                    value={DATE(\n                      this.state.date_of_screening_feedback,\n                      \"YYYY/MM/DD\"\n                    )}\n                    onChange={(e) => {\n                      this.setState({\n                        date_of_screening_feedback: e.target.value,\n                        error: null,\n                      });\n                    }}\n                    disabled={this.state.loading}\n                    className={`px-3 py-2 rounded-md border ${\n                      this.state.error?.target === \"date_of_screening_feedback\"\n                        ? \"border-red-600 animate__animated animate__shakeX\"\n                        : \"border-gray-400\"\n                    } w-full text-sm`}\n                  />\n                  {this.state.error !== null &&\n                    this.state.error.target ===\n                      \"date_of_screening_feedback\" && (\n                      <div className=\"my-2\">\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\"Invalid input!\"}\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                            });\n                          }}\n                        />\n                      </div>\n                    )}\n                </div>\n                {/* Description here */}\n                <div className=\"flex flex-col w-full mt-3\">\n                  <span className=\"text-sm\">Screening feedback (Optional)</span>\n                  <textarea\n                    value={this.state.screening_feedback}\n                    onChange={(e) => {\n                      this.setState({\n                        screening_feedback: e.target.value,\n                        error: null,\n                      });\n                    }}\n                    disabled={this.state.loading}\n                    className={`px-3 py-2 rounded-md border ${\n                      this.state.error?.target === \"screening_feedback\"\n                        ? \"border-red-600 animate__animated animate__shakeX\"\n                        : \"border-gray-400\"\n                    } w-full text-sm`}\n                  ></textarea>\n                  {this.state.error !== null &&\n                    this.state.error.target === \"screening_feedback\" && (\n                      <div className=\"my-2\">\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\"Invalid input!\"}\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                            });\n                          }}\n                        />\n                      </div>\n                    )}\n                </div>\n              </div>\n            )}\n            {/* ------------------------------------------------------ */}\n            {this.props.editScreening === \"Response\" && (\n              <div className=\"col-span-6\">\n                <div className=\"flex flex-col w-full\">\n                  <span className=\"text-sm\">Date of screening response</span>\n                  <input\n                    type=\"date\"\n                    value={\n                      this.state.date_of_screening_response === null\n                        ? \"\"\n                        : DATE(\n                            this.state.date_of_screening_response,\n                            \"YYYY/MM/DD\"\n                          )\n                    }\n                    onChange={(e) => {\n                      this.setState({\n                        date_of_screening_response: e.target.value,\n                        error: null,\n                      });\n                    }}\n                    disabled={this.state.loading}\n                    className={`px-3 py-2 rounded-md border ${\n                      this.state.error?.target === \"date_of_screening_response\"\n                        ? \"border-red-600 animate__animated animate__shakeX\"\n                        : \"border-gray-400\"\n                    } w-full text-sm`}\n                  />\n                  {this.state.error !== null &&\n                    this.state.error.target ===\n                      \"date_of_screening_response\" && (\n                      <div className=\"my-2\">\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\"Invalid input!\"}\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                            });\n                          }}\n                        />\n                      </div>\n                    )}\n                </div>\n                {/* Description */}\n                <div className=\"flex flex-col w-full mt-3\">\n                  <span className=\"text-sm\">Screening response (Optional)</span>\n                  <textarea\n                    value={this.state.screening_response}\n                    onChange={(e) => {\n                      this.setState({\n                        screening_response: e.target.value,\n                        error: null,\n                      });\n                    }}\n                    disabled={this.state.loading}\n                    className={`px-3 py-2 rounded-md border ${\n                      this.state.error?.target === \"screening_response\"\n                        ? \"border-red-600 animate__animated animate__shakeX\"\n                        : \"border-gray-400\"\n                    } w-full text-sm`}\n                  ></textarea>\n                  {this.state.error !== null &&\n                    this.state.error.target === \"screening_response\" && (\n                      <div className=\"my-2\">\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\"Invalid input!\"}\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                            });\n                          }}\n                        />\n                      </div>\n                    )}\n                </div>\n              </div>\n            )}\n            <div className=\"col-span-6\"></div>\n            {this.props.editScreening === \"Status\" && (\n              <div className=\"col-span-6\"></div>\n            )}\n            <div className=\"col-span-6 flex flex-col gap-2\">\n              <div className=\"\">\n                <div className=\"flex flex-col w-full my-3\">\n                  <span className=\"text-sm\">Screened by</span>\n                  <input\n                    value={this.state.done_by}\n                    onChange={(e) => {\n                      this.setState({\n                        done_by: e.target.value,\n                        error: null,\n                      });\n                    }}\n                    disabled={this.state.loading}\n                    className={`px-3 py-2 rounded-md border ${\n                      this.state.error?.target === \"done_by\"\n                        ? \"border-red-600 animate__animated animate__shakeX\"\n                        : \"border-gray-400\"\n                    } w-full text-sm`}\n                  />\n                  {this.state.error !== null &&\n                    this.state.error.target === \"done_by\" && (\n                      <div className=\"my-2\">\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\"Invalid input!\"}\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                            });\n                          }}\n                        />\n                      </div>\n                    )}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-span-12\">\n              <div>\n                <div className=\"font-bold text-lg mb-2\">\n                  Choose Screening status\n                </div>\n                <div className=\"flex flex-row items-center \">\n                  {[\n                    ScreeningStatusValues.PROGRESS_IN_SCREENING,\n                    ScreeningStatusValues.SCREENING_COMPLETED,\n                    ScreeningStatusValues.WITHDRAWN,\n                  ].map((item, i) => (\n                    <div\n                      key={i + 1}\n                      className={`${\n                        this.state.screening_status === item\n                          ? \"bg-primary-100 text-primary-900 font-extrabold\"\n                          : \"text-gray-600 hover:bg-primary-50 hover:text-primary-800\"\n                      } text-sm p-1 pr-3 rounded-full flex flex-row items-center justify-center gap-2 cursor-pointer`}\n                      onClick={() => this.setState({ screening_status: item })}\n                    >\n                      <div>\n                        {this.state.screening_status === item ? (\n                          <BsCheckCircleFill className=\"text-2xl\" />\n                        ) : (\n                          <MdRadioButtonUnchecked className=\"text-2xl\" />\n                        )}\n                      </div>\n                      <span>{item}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"flex flex-row items-center justify-end mt-3 w-full\">\n                <div className=\"w-full\">\n                  <div className=\"my-2 w-full\">\n                    {this.state.error !== null &&\n                      this.state.error.target === \"main\" && (\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\"Error Occurred!\"}\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                              success: \"\",\n                            });\n                          }}\n                        />\n                      )}\n                  </div>\n                  {this.state.success !== \"\" && (\n                    <div className=\"my-2\">\n                      <Alert\n                        alertType={AlertType.SUCCESS}\n                        title={\"Action succeeded!\"}\n                        description={this.state.success}\n                        close={() => {\n                          this.setState({\n                            error: null,\n                            success: \"\",\n                          });\n                        }}\n                      />\n                    </div>\n                  )}\n                  <button\n                    type=\"submit\"\n                    disabled={this.state.loading}\n                    className=\"flex flex-row items-center justify-center gap-2 font-normal px-3 py-2 rounded-md cursor-pointer text-white bg-primary-800 hover:bg-primary-900\"\n                  >\n                    <div>\n                      {this.state.loading === true ? (\n                        <AiOutlineLoading3Quarters className=\"text-xl animate-spin\" />\n                      ) : (\n                        <MdSave className=\"text-xl\" />\n                      )}\n                    </div>\n                    <span>\n                      {this.state.loading === true\n                        ? \"Loading...\"\n                        : \"Save changes\"}\n                    </span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditScreening;\n","import React, { Component } from \"react\";\nimport { BiMessageSquareEdit } from \"react-icons/bi\";\nimport {\n  BsArrowLeft,\n  BsArrowRight,\n  BsInfoCircle,\n  BsInfoCircleFill,\n} from \"react-icons/bs\";\nimport { IoWarningOutline } from \"react-icons/io5\";\nimport { MdAccessTime, MdFeedback } from \"react-icons/md\";\nimport { ApplicationDetailsInterface } from \"../../../actions\";\nimport { DATE } from \"../../../utils/functions\";\nimport EditScreening from \"../edit/EditScreening\";\nimport {\n  FCGetScreeningStatusElement,\n  GetLastScreeningValue,\n  screeningNumberOfDays,\n  validateScreening30Days,\n} from \"../Screening\";\n\ninterface ScreeningDetailsProps {\n  data: ApplicationDetailsInterface;\n  openScreeningDetails: (status: boolean) => void;\n  onSave: (reference_number: string) => void;\n  modal: boolean;\n}\n\ninterface ScreeningDetailsState {\n  editScreening: \"FeedBack\" | \"Response\" | \"Status\" | null;\n}\n\nconst ScreeningSection = (props: {\n  date: string;\n  description: string;\n  type: \"Feedback\" | \"Response\";\n  onClick: () => void;\n}) => {\n  return (\n    <div\n      onClick={props.onClick}\n      className=\"w-full rounded-md flex flex-row items-center gap-2 group hover:text-primary-900 border px-2 py-1 hover:bg-primary-50 hover:border-primary-100 cursor-pointer\"\n    >\n      <div>\n        <div className=\"h-16 w-16 rounded-lg flex items-center justify-center bg-primary-100 group-hover:bg-white\">\n          {props.type === \"Response\" ? (\n            <MdFeedback className=\"text-5xl text-primary-700 group-hover:text-primary-800\" />\n          ) : (\n            <BsInfoCircleFill className=\"text-5xl text-primary-700 group-hover:text-primary-800\" />\n          )}\n        </div>\n      </div>\n      <div className=\"flex flex-col gap-2\">\n        <div className=\"flex flex-col text-sm\">\n          <span className=\"font-bold\">Screening {props.type}</span>\n          <div className=\"flex flex-row items-center gap-2\">\n            <div>\n              <MdAccessTime className=\"text-xl text-gray-400 group-hover:text-primary-900\" />\n            </div>\n            <span className=\"font-semibold\">Date: {DATE(props.date)}</span>\n          </div>\n        </div>\n        <div className=\"flex flex-col text-sm\">\n          {/* <span className=\"font-light\">Screening {props.type}</span> */}\n          <div>{props.description}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst EmptyScreeningSection = (props: {\n  type: \"Feedback\" | \"Response\";\n  onClick: () => void;\n}) => {\n  return (\n    <div\n      onClick={props.onClick}\n      className=\"w-full flex flex-row items-center gap-2 justify-between rounded-md group hover:text-primary-900 border px-1 py-1 hover:bg-primary-50 hover:border-primary-100 cursor-pointer\"\n    >\n      <div className=\"flex flex-row items-center gap-2\">\n        <div>\n          <div className=\"h-16 w-16 rounded-lg flex items-center justify-center bg-gray-100 group-hover:bg-white\">\n            {props.type === \"Response\" ? (\n              <MdFeedback className=\"text-5xl text-gray-300 group-hover:text-primary-800 animate-pulse\" />\n            ) : (\n              <BsInfoCircleFill className=\"text-5xl text-gray-300 group-hover:text-primary-800 animate-pulse\" />\n            )}\n          </div>\n        </div>\n        <div className=\"flex flex-col justify-between\">\n          <span className=\"font-bold\">Screening {props.type}</span>\n          <span className=\"text-lg font-light\">\n            Click here to add {props.type}\n          </span>\n        </div>\n      </div>\n      <div className=\"mr-2\">\n        <BsArrowRight className=\"text-3xl text-gray-300 group-hover:text-primary-900\" />\n      </div>\n    </div>\n  );\n};\n\nexport class ScreeningDetails extends Component<\n  ScreeningDetailsProps,\n  ScreeningDetailsState\n> {\n  constructor(props: ScreeningDetailsProps) {\n    super(props);\n\n    this.state = {\n      editScreening: null,\n    };\n  }\n  GetLastScreeningFeedBack = () => {\n    if (this.props.data.screenings.length === 0) {\n      return null;\n    }\n    const item =\n      this.props.data.screenings[this.props.data.screenings.length - 1];\n    if (\n      item.date_of_screening_feedback !== \"\" &&\n      item.date_of_screening_feedback !== null\n    ) {\n      return item;\n    }\n    return null;\n  };\n  GetLastScreeningResponse = () => {\n    if (this.props.data.screenings.length === 0) {\n      return null;\n    }\n    const item =\n      this.props.data.screenings[this.props.data.screenings.length - 1];\n    if (\n      item.date_of_screening_response !== \"\" &&\n      item.date_of_screening_response !== null\n    ) {\n      return item;\n    }\n    return null;\n  };\n  componentDidMount(): void {\n    if (this.props.data.screenings.length === 0) {\n      this.setState({ editScreening: \"FeedBack\" });\n    }\n  }\n  screeningNumberOfDays = (): number => {\n    return screeningNumberOfDays(this.props.data.screenings);\n  };\n\n  validateScreening30Days = (): \"VALID\" | \"INVALID\" => {\n    return validateScreening30Days(this.props.data.screenings);\n  };\n  render() {\n    if (this.state.editScreening !== null) {\n      return (\n        <EditScreening\n          onGoBack={() => {\n            this.setState({ editScreening: null });\n            if (this.props.data.screenings.length === 0) {\n              this.props.openScreeningDetails(false);\n            }\n          }}\n          data={this.props.data}\n          onSave={(application_ref_number: string) => {\n            // this.setState({ editScreening: null });\n            this.props.onSave(application_ref_number);\n          }}\n          editScreening={this.state.editScreening}\n          modal={this.props.modal}\n        />\n      );\n    }\n    return (\n      <div className=\"animate__animated animate__fadeIn rounded-md bg-white p-3\">\n        <div className=\"flex flex-row items-center gap-2 justify-between\">\n          <div className=\"flex flex-row items-center gap-2\">\n            <div>\n              <div\n                onClick={() => this.props.openScreeningDetails(false)}\n                className=\"flex items-center justify-center h-10 w-10 rounded-full bg-gray-100 hover:bg-primary-100 hover:text-primary-900 cursor-pointer\"\n              >\n                <BsArrowLeft className=\"text-2xl\" />\n              </div>\n            </div>\n            <div className=\"font-extrabold text-xl flex flex-col\">\n              <span>Screening details</span>\n              <span className=\"text-sm font-light\">\n                This is the historical information for application screening\n              </span>\n            </div>\n          </div>\n          {this.props.data.screenings.length > 0 && (\n            <FCGetScreeningStatusElement\n              screening_status={\n                this.props.data.screenings[\n                  this.props.data.screenings.length - 1\n                ].screening_status\n              }\n            />\n          )}\n        </div>\n        {/* Details */}\n        {GetLastScreeningValue(this.props.data.screenings) !== null &&\n          (GetLastScreeningValue(this.props.data.screenings)!\n            .date_of_screening_feedback === null ||\n            GetLastScreeningValue(this.props.data.screenings)!\n              .date_of_screening_feedback === \"\") &&\n          this.validateScreening30Days() === \"INVALID\" && (\n            <div className=\"my-3 rounded-md bg-red-100 border-red-300 text-red-700 px-2 py-2 pr-4 flex flex-row items-center gap-3\">\n              <div>\n                <IoWarningOutline className=\"text-6xl animate__animated animate__tada animate__infinite\" />\n              </div>\n              <div className=\"flex flex-col\">\n                <div className=\"flex flex-row gap-2 items-center text-xl font-extrabold\">\n                  <div className=\"text-base bg-red-700 text-white rounded-full px-2\">\n                    {this.screeningNumberOfDays()}\n                  </div>\n                  <span>days passed without feedback</span>\n                </div>\n                <div className=\"text-sm\">\n                  This application took over 30 days of getting customer\n                  feedback, please check out for this\n                </div>\n              </div>\n            </div>\n          )}\n        {GetLastScreeningValue(this.props.data.screenings) !== null &&\n          GetLastScreeningValue(this.props.data.screenings)!\n            .date_of_screening_response !== null &&\n          GetLastScreeningValue(this.props.data.screenings)!\n            .date_of_screening_response !== \"\" && (\n            <div className=\"my-3 rounded-md bg-primary-50 border-primary-300 text-primary-900 px-2 py-2 pr-4 flex flex-row items-center gap-3\">\n              <div>\n                <BsInfoCircle className=\"text-5xl animate__animated animate__tada\" />\n              </div>\n              <div className=\"flex flex-col\">\n                <div className=\"flex flex-row gap-2 items-center text-xl font-extrabold\">\n                  <div className=\"text-base bg-primary-700 text-white rounded-full px-2\">\n                    {this.screeningNumberOfDays()}\n                  </div>\n                  <span>days taken to complete screening</span>\n                </div>\n                <div className=\"text-sm\">\n                  These days are taken from the start of screening up to the end\n                </div>\n              </div>\n            </div>\n          )}\n        <div className=\"flex flex-row gap-4 mt-5\">\n          {this.GetLastScreeningResponse() !== null && (\n            <>\n              {this.GetLastScreeningFeedBack() !== null &&\n              this.GetLastScreeningFeedBack()!.date_of_screening_feedback !==\n                null ? (\n                <ScreeningSection\n                  date={\n                    this.GetLastScreeningFeedBack()!.date_of_screening_feedback!\n                  }\n                  description={\n                    this.GetLastScreeningFeedBack()!.screening_feedback\n                  }\n                  type={\"Feedback\"}\n                  onClick={() => this.setState({ editScreening: \"FeedBack\" })}\n                />\n              ) : (\n                <EmptyScreeningSection\n                  type=\"Feedback\"\n                  onClick={() => this.setState({ editScreening: \"FeedBack\" })}\n                />\n              )}\n            </>\n          )}\n          {this.GetLastScreeningResponse() !== null ? (\n            <ScreeningSection\n              date={\n                this.GetLastScreeningResponse()!.date_of_screening_response ===\n                null\n                  ? \"\"\n                  : this.GetLastScreeningResponse()!.date_of_screening_response!\n              }\n              description={this.GetLastScreeningResponse()!.screening_response}\n              type={\"Response\"}\n              onClick={() => this.setState({ editScreening: \"Response\" })}\n            />\n          ) : (\n            <EmptyScreeningSection\n              type=\"Response\"\n              onClick={() => this.setState({ editScreening: \"Response\" })}\n            />\n          )}\n        </div>\n        {this.GetLastScreeningResponse() !== null && (\n          <div className=\"my-3 font-bold bg-gray-100 rounded-md px-3 py-2 w-max\">\n            Done by {this.GetLastScreeningResponse()?.done_by}\n          </div>\n        )}\n        {this.props.data.screenings.length > 0 && (\n          <div className=\"mt-5 flex flex-row items-center gap-2\">\n            <div\n              onClick={() => this.setState({ editScreening: \"Status\" })}\n              className=\"px-3 py-2 text-sm font-bold rounded-md bg-primary-100 text-primary-900 hover:bg-primary-800 hover:text-white cursor-pointer w-max flex flex-row items-center gap-2\"\n            >\n              <div>\n                <BiMessageSquareEdit className=\"text-2xl\" />\n              </div>\n              <span>Update screening status</span>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { BsArrowLeft, BsCheckCircleFill } from \"react-icons/bs\";\nimport { MdRadioButtonUnchecked, MdSave } from \"react-icons/md\";\nimport {\n  ApplicationDetailsInterface,\n  FC_UpdatePeerReview,\n  PeerReviewSavedData,\n  PeerReviewStatusValues,\n} from \"../../../actions\";\nimport Alert, { AlertType } from \"../../Alert/Alert\";\n\ninterface PeerReviewProps {\n  onGoBack: () => void;\n  onSave: (reference_number: string) => void;\n  data: ApplicationDetailsInterface;\n  comment: string;\n  status: PeerReviewStatusValues;\n  modal: boolean;\n}\ninterface PeerReviewState {\n  loading: boolean;\n  success: string;\n  error: {\n    target: \"comment\" | \"main\";\n    msg: string;\n  } | null;\n  application_id: string;\n  application_ref_number: string;\n  comment: string;\n  peer_review_status: PeerReviewStatusValues;\n}\n\nexport class EditPeerReview extends Component<\n  PeerReviewProps,\n  PeerReviewState\n> {\n  constructor(props: PeerReviewProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: null,\n      success: \"\",\n      application_id: this.props.data.application_id,\n      application_ref_number: this.props.data.application_ref_number,\n      comment: this.props.comment,\n      peer_review_status: this.props.status,\n    };\n  }\n  SubmitPeerReview = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.state.application_id === \"\") {\n      return this.setState({\n        error: { target: \"main\", msg: \"Please select application ID\" },\n      });\n    }\n    if (this.state.application_ref_number === \"\") {\n      return this.setState({\n        error: {\n          target: \"main\",\n          msg: \"Please select application reference number!\",\n        },\n      });\n    }\n    if (this.state.comment === \"\") {\n      return this.setState({\n        error: {\n          target: \"comment\",\n          msg: \"Please select date of screening feedback!\",\n        },\n      });\n    }\n\n    // Saving\n    this.setState({ loading: true });\n    const data_saved: PeerReviewSavedData = {\n      application_ref_number: this.state.application_ref_number,\n      comment: this.state.comment,\n      status: this.state.peer_review_status,\n    };\n    FC_UpdatePeerReview(\n      data_saved,\n      this.state.comment !== \"\" ? \"Update\" : \"Add\",\n      (\n        loading: boolean,\n        feedback: {\n          type: \"success\" | \"error\";\n          msg: string;\n        } | null\n      ) => {\n        this.setState({\n          loading: loading,\n        });\n        if (loading === false) {\n          if (feedback !== null) {\n            if (feedback.type === \"success\") {\n              this.setState({\n                error: null,\n                success: feedback.msg,\n                comment: \"\",\n              });\n              //   OnSave\n              this.props.onSave(this.state.application_ref_number);\n            }\n            if (feedback.type === \"error\") {\n              this.setState({\n                error: {\n                  target: \"main\",\n                  msg: feedback.msg,\n                },\n                success: \"\",\n              });\n            }\n          }\n        }\n      }\n    );\n  };\n  render() {\n    return (\n      <div>\n        <div\n          className={`${\n            this.props.modal === true ? \"bg-gray-200\" : \"bg-white\"\n          } rounded-md p-3 animate__animated animate__fadeIn`}\n        >\n          {/* Title here */}\n          <div></div>\n          {/* Details */}\n          <div className=\"flex flex-row items-center gap-3\">\n            <div className=\"\">\n              <div\n                onClick={this.props.onGoBack}\n                className={`bg-gray-100 cursor-pointer hover:bg-primary-100 hover:text-primary-800 flex items-center justify-center h-10 w-10 rounded-full`}\n              >\n                <BsArrowLeft className=\"text-3xl\" />\n              </div>\n            </div>\n            <div className=\"flex flex-col\">\n              <span className=\"text-xl font-extrabold\">\n                Add peer review information\n              </span>\n              <span className=\"text-xs\">\n                Fill the following fields to updated the system about peer\n                review\n              </span>\n            </div>\n          </div>\n          <form\n            onSubmit={this.SubmitPeerReview}\n            className=\"grid grid-cols-12 gap-3 mt-5\"\n          >\n            {/* ------------------------------------------------------ */}\n            <div className=\"col-span-6\">\n              {/* Description */}\n              <div className=\"flex flex-col w-full mt-3\">\n                <span className=\"text-sm\">Peer Review Response</span>\n                <textarea\n                  value={this.state.comment}\n                  onChange={(e) => {\n                    this.setState({\n                      comment: e.target.value,\n                      error: null,\n                    });\n                  }}\n                  disabled={this.state.loading}\n                  className={`px-3 py-2 rounded-md border ${\n                    this.state.error?.target === \"comment\"\n                      ? \"border-red-600 animate__animated animate__shakeX\"\n                      : \"border-gray-400\"\n                  } w-full text-sm`}\n                ></textarea>\n                {this.state.error !== null &&\n                  this.state.error.target === \"comment\" && (\n                    <div className=\"my-2\">\n                      <Alert\n                        alertType={AlertType.DANGER}\n                        title={\"Invalid input!\"}\n                        description={this.state.error.msg}\n                        close={() => {\n                          this.setState({\n                            error: null,\n                          });\n                        }}\n                      />\n                    </div>\n                  )}\n              </div>\n            </div>\n            {/* Other info STATUS */}\n            <div className=\"col-span-12 flex flex-row items-center gap-3 justify-end\">\n              {/* Status here */}\n              <div className=\"\">\n                <div className=\"font-bold text-lg mb-2\">\n                  Choose Peer review status\n                </div>\n                <div className=\"flex flex-row items-center justify-end\">\n                  {(\n                    [\n                      PeerReviewStatusValues.incomplete.toUpperCase(),\n                      PeerReviewStatusValues.approved.toUpperCase(),\n                      PeerReviewStatusValues.rejected.toUpperCase(),\n                    ] as PeerReviewStatusValues[]\n                  ).map((item, i) => (\n                    <div\n                      key={i + 1}\n                      className={`${\n                        this.state.peer_review_status.toUpperCase() ===\n                        item.toUpperCase()\n                          ? \"bg-primary-100 text-primary-900 font-extrabold\"\n                          : \"text-gray-600 hover:bg-primary-50 hover:text-primary-800\"\n                      } text-sm p-1 pr-3 rounded-full flex flex-row items-center justify-center gap-2 cursor-pointer`}\n                      onClick={() =>\n                        this.setState({ peer_review_status: item })\n                      }\n                    >\n                      <div>\n                        {this.state.peer_review_status.toUpperCase() ===\n                        item.toUpperCase() ? (\n                          <BsCheckCircleFill className=\"text-2xl\" />\n                        ) : (\n                          <MdRadioButtonUnchecked className=\"text-2xl\" />\n                        )}\n                      </div>\n                      <span>{item}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"flex flex-row items-center justify-end mt-3 w-full\">\n                <div className=\"w-full\">\n                  <div className=\"my-2 w-full\">\n                    {this.state.error !== null &&\n                      this.state.error.target === \"main\" && (\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\"Error Occurred!\"}\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                              success: \"\",\n                            });\n                          }}\n                        />\n                      )}\n                  </div>\n                  {this.state.success !== \"\" && (\n                    <div className=\"my-2\">\n                      <Alert\n                        alertType={AlertType.SUCCESS}\n                        title={\"Action succeeded!\"}\n                        description={this.state.success}\n                        close={() => {\n                          this.setState({\n                            error: null,\n                            success: \"\",\n                          });\n                        }}\n                      />\n                    </div>\n                  )}\n                  <button\n                    type=\"submit\"\n                    disabled={this.state.loading}\n                    className=\"flex flex-row items-center justify-center gap-2 font-normal px-3 py-2 rounded-md cursor-pointer text-white bg-primary-800 hover:bg-primary-900\"\n                  >\n                    <div>\n                      {this.state.loading === true ? (\n                        <AiOutlineLoading3Quarters className=\"text-xl animate-spin\" />\n                      ) : (\n                        <MdSave className=\"text-xl\" />\n                      )}\n                    </div>\n                    <span>\n                      {this.state.loading === true\n                        ? \"Loading...\"\n                        : \"Save changes\"}\n                    </span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BiMessageSquareEdit } from \"react-icons/bi\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport {\n  ApplicationDetailsInterface,\n  PeerReviewStatusValues,\n} from \"../../../actions\";\nimport { EditPeerReview } from \"../edit/EditPeerReview\";\nimport { FCGetPeerReviewStatusElement } from \"../PeerReview\";\n\ninterface PeerReviewDetailsProps {\n  data: ApplicationDetailsInterface;\n  openPeerReviewDetails: (status: boolean) => void;\n  onSave: (application_reference_number: string) => void;\n  modal: boolean;\n}\n\ninterface PeerReviewDetailsState {\n  editReview: {\n    comment: string;\n    status: PeerReviewStatusValues;\n  } | null;\n}\n\nexport class PeerReviewDetails extends Component<\n  PeerReviewDetailsProps,\n  PeerReviewDetailsState\n> {\n  constructor(props: PeerReviewDetailsProps) {\n    super(props);\n\n    this.state = {\n      editReview: null,\n    };\n  }\n  componentDidMount(): void {\n    if (this.props.data.peerreviews.length === 0) {\n      this.setState({\n        editReview: {\n          comment: \"\",\n          status: PeerReviewStatusValues.approved,\n        },\n      });\n    }\n  }\n  render() {\n    if (this.state.editReview !== null) {\n      return (\n        <EditPeerReview\n          onGoBack={() => {\n            this.setState({ editReview: null });\n            if (this.props.data.peerreviews.length === 0) {\n              this.props.openPeerReviewDetails(false);\n            }\n          }}\n          onSave={(application_ref_number: string) => {\n            this.props.onSave(application_ref_number);\n          }}\n          data={this.props.data}\n          comment={this.state.editReview.comment}\n          status={this.state.editReview.status}\n          modal={this.props.modal}\n        />\n      );\n    }\n    return (\n      <div className=\"animate__animated animate__slideInRight animate__faster rounded-md bg-white p-3\">\n        <div className=\"flex flex-row items-center gap-2\">\n          <div>\n            <div\n              onClick={() => this.props.openPeerReviewDetails(false)}\n              className=\"flex items-center justify-center h-10 w-10 rounded-full bg-gray-100 hover:bg-primary-100 hover:text-primary-900 cursor-pointer\"\n            >\n              <BsArrowLeft className=\"text-2xl\" />\n            </div>\n          </div>\n          <div className=\"font-extrabold text-xl flex flex-col\">\n            <span>Peer review details</span>\n            <span className=\"text-sm font-light\">\n              This is the historical information for application peer review\n            </span>\n          </div>\n        </div>\n        {/* Details */}\n        <div className=\"my-3\">\n          {this.props.data.peerreviews.length === 0 ? (\n            <div className=\"w-full rounded-md bg-gray-200 text-lg font-light px-3 py-2\">\n              No review data found!\n            </div>\n          ) : (\n            [\n              this.props.data.peerreviews[\n                this.props.data.peerreviews.length - 1\n              ],\n            ].map((item, i) => (\n              <div\n                key={i + 1}\n                className=\"rounded-md bg-gray-100 hover:text-primary-900 flex flex-row items-center justify-between gap-2 w-full px-3 py-2 mb-2 hover:bg-primary-100 cursor-pointer group\"\n                // onClick={() => {\n                //   this.setState({\n                //     editReview: {\n                //       comment: item.comment,\n                //       status: item.status,\n                //     },\n                //   });\n                // }}\n              >\n                <div className=\"flex flex-row items-center gap-2\">\n                  <div>\n                    <div className=\"rounded-full bg-gray-200 group-hover:bg-primary-800 group-hover:text-white font-extrabold text-lg flex items-center justify-center h-8 w-8\">\n                      {i + 1}\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-sm font-bold\">Review comment</span>\n                    <span className=\"font-base text-sm\">{item.comment}</span>\n                  </div>\n                </div>\n                <div>\n                  <FCGetPeerReviewStatusElement\n                    peerReview_status={item.status}\n                  />\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n        {\n          <div\n            onClick={() => {\n              this.setState({\n                editReview: {\n                  comment: \"\",\n                  status: PeerReviewStatusValues.approved,\n                },\n              });\n            }}\n            className=\"mt-5 flex flex-row items-center gap-2\"\n          >\n            <div className=\"px-3 py-2 text-sm font-bold rounded-md bg-primary-100 text-primary-900 hover:bg-primary-800 hover:text-white cursor-pointer w-max flex flex-row items-center gap-2\">\n              <div>\n                <BiMessageSquareEdit className=\"text-2xl\" />\n              </div>\n              <span>Add peer review</span>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { BsArrowLeft, BsCheckCircleFill } from \"react-icons/bs\";\nimport { MdRadioButtonUnchecked, MdSave } from \"react-icons/md\";\nimport {\n  ApplicationDetailsInterface,\n  AssessmentOutcomeValues,\n  FC_UpdateAssessment,\n  LevelsValues,\n  RoundValues,\n} from \"../../../actions\";\nimport { DATE } from \"../../../utils/functions\";\nimport Alert, { AlertType } from \"../../Alert/Alert\";\n\ninterface EditAssessmentProps {\n  onGoBack: () => void;\n  onSave: (reference_number: string) => void;\n  data: ApplicationDetailsInterface;\n  assessment_level: LevelsValues;\n  assessment_round: RoundValues;\n  assessment_start_date: string;\n  assessment_end_date: string;\n  assessment_outcome: AssessmentOutcomeValues;\n  assessment_comment: string;\n  done_by: string;\n  action_type: \"Update\" | \"Add\";\n}\ninterface EditAssessmentState {\n  loading: boolean;\n  success: string;\n  error: {\n    target:\n      | \"assessment_round\"\n      | \"assessment_round\"\n      | \"assessment_start_date\"\n      | \"assessment_end_date\"\n      | \"assessment_outcome\"\n      | \"assessment_comment\"\n      | \"done_by\"\n      | \"main\";\n    msg: string;\n  } | null;\n  application_ref_number: string;\n  assessment_level: LevelsValues;\n  assessment_round: RoundValues;\n  assessment_start_date: string;\n  assessment_end_date: string;\n  assessment_outcome: AssessmentOutcomeValues;\n  assessment_comment: string;\n  done_by: string;\n  done_at: string | null;\n}\n\nexport class EditAssessment extends Component<\n  EditAssessmentProps,\n  EditAssessmentState\n> {\n  constructor(props: EditAssessmentProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: null,\n      success: \"\",\n      application_ref_number: this.props.data.application_ref_number,\n      assessment_level: this.props.assessment_level,\n      assessment_round: this.props.assessment_round,\n      assessment_start_date: this.props.assessment_start_date,\n      assessment_end_date: this.props.assessment_end_date,\n      assessment_outcome: this.props.assessment_outcome,\n      assessment_comment: this.props.assessment_comment,\n      done_by: this.props.done_by,\n      done_at: \"\", //Default change it to null\n    };\n  }\n  SubmitAssessment = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.state.application_ref_number === \"\") {\n      return this.setState({\n        error: {\n          target: \"main\",\n          msg: \"Please select application reference number!\",\n        },\n      });\n    }\n\n    if (this.state.assessment_start_date === \"\") {\n      return this.setState({\n        error: {\n          target: \"assessment_start_date\",\n          msg: \"Please select assessment start date!\",\n        },\n      });\n    }\n    if (this.state.assessment_end_date === \"\") {\n      return this.setState({\n        error: {\n          target: \"assessment_end_date\",\n          msg: \"Please select assessment ending date!\",\n        },\n      });\n    }\n    if (this.state.done_by === \"\") {\n      return this.setState({\n        error: {\n          target: \"done_by\",\n          msg: \"Please type name of person who did assessment!\",\n        },\n      });\n    }\n    // Saving\n    this.setState({ loading: true });\n    const data_saved = {\n      application_ref_number: this.state.application_ref_number,\n      assessment_level: this.state.assessment_level,\n      assessment_round: this.state.assessment_round,\n      assessment_start_date: DATE(\n        this.state.assessment_start_date,\n        \"YYYY/MM/DD\"\n      ),\n      assessment_end_date: DATE(this.state.assessment_end_date, \"YYYY/MM/DD\"),\n      assessment_outcome: this.state.assessment_outcome,\n      assessment_comment:\n        this.state.assessment_comment === \"\"\n          ? \"No comment\"\n          : this.state.assessment_comment,\n      done_by: this.state.done_by,\n      done_at: this.state.done_at,\n    };\n    FC_UpdateAssessment(\n      data_saved,\n      this.props.action_type,\n      (\n        loading: boolean,\n        feedback: {\n          type: \"success\" | \"error\";\n          msg: string;\n        } | null\n      ) => {\n        this.setState({\n          loading: loading,\n        });\n        if (loading === false) {\n          if (feedback !== null) {\n            if (feedback.type === \"success\") {\n              this.setState({\n                error: null,\n                success: feedback.msg,\n                assessment_start_date: \"\",\n                assessment_end_date: \"\",\n                assessment_comment: \"\",\n              });\n              //   OnSave\n              this.props.onSave(this.state.application_ref_number);\n            }\n            if (feedback.type === \"error\") {\n              this.setState({\n                error: {\n                  target: \"main\",\n                  msg: feedback.msg,\n                },\n                success: \"\",\n              });\n            }\n          }\n        }\n      }\n    );\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"bg-white rounded-md p-3 animate__animated animate__fadeIn\">\n          {/* Title here */}\n          <div></div>\n          {/* Details */}\n          <div className=\"flex flex-row items-center gap-3\">\n            <div className=\"\">\n              <div\n                onClick={this.props.onGoBack}\n                className={`bg-gray-100 cursor-pointer hover:bg-primary-100 hover:text-primary-800 flex items-center justify-center h-10 w-10 rounded-full`}\n              >\n                <BsArrowLeft className=\"text-3xl\" />\n              </div>\n            </div>\n            <div className=\"flex flex-col\">\n              <span className=\"text-xl font-extrabold\">\n                Add Assessment Outcomes\n              </span>\n              <span className=\"text-xs\">\n                Fill the following fields to updated the system about assessment\n                outcomes\n              </span>\n            </div>\n          </div>\n          <form\n            onSubmit={this.SubmitAssessment}\n            className=\"grid grid-cols-12 gap-3 mt-5\"\n          >\n            <div className=\"col-span-6\">\n              <div className=\"flex flex-col w-full\">\n                <span className=\"text-sm\">Start date of assessment</span>\n                <input\n                  type=\"date\"\n                  value={\n                    this.state.assessment_start_date === \"\"\n                      ? \"\"\n                      : DATE(this.state.assessment_start_date, \"YYYY/MM/DD\")\n                  }\n                  onChange={(e) => {\n                    this.setState({\n                      assessment_start_date: e.target.value,\n                      error: null,\n                    });\n                  }}\n                  disabled={this.state.loading}\n                  className={`px-3 py-2 rounded-md border ${\n                    this.state.error?.target === \"assessment_start_date\"\n                      ? \"border-red-600 animate__animated animate__shakeX\"\n                      : \"border-gray-400\"\n                  } w-full text-sm`}\n                />\n                {this.state.error !== null &&\n                  this.state.error.target === \"assessment_start_date\" && (\n                    <div className=\"my-2\">\n                      <Alert\n                        alertType={AlertType.DANGER}\n                        title={\"Invalid input!\"}\n                        description={this.state.error.msg}\n                        close={() => {\n                          this.setState({\n                            error: null,\n                          });\n                        }}\n                      />\n                    </div>\n                  )}\n              </div>\n              {/* Description here */}\n              <div className=\"flex flex-col w-full mt-3\">\n                <span className=\"text-sm\">Assessment comment (Optional)</span>\n                <textarea\n                  value={this.state.assessment_comment}\n                  onChange={(e) => {\n                    this.setState({\n                      assessment_comment: e.target.value,\n                      error: null,\n                    });\n                  }}\n                  disabled={this.state.loading}\n                  className={`px-3 py-2 rounded-md border ${\n                    this.state.error?.target === \"assessment_comment\"\n                      ? \"border-red-600 animate__animated animate__shakeX\"\n                      : \"border-gray-400\"\n                  } w-full text-sm`}\n                ></textarea>\n                {this.state.error !== null &&\n                  this.state.error.target === \"assessment_comment\" && (\n                    <div className=\"my-2\">\n                      <Alert\n                        alertType={AlertType.DANGER}\n                        title={\"Invalid input!\"}\n                        description={this.state.error.msg}\n                        close={() => {\n                          this.setState({\n                            error: null,\n                          });\n                        }}\n                      />\n                    </div>\n                  )}\n              </div>\n            </div>\n            {/* ------------------------------------------------------ */}\n            <div className=\"col-span-6\">\n              <div className=\"flex flex-col w-full\">\n                <span className=\"text-sm\">Ending date of assessment</span>\n                <input\n                  type=\"date\"\n                  value={\n                    this.state.assessment_end_date === \"\"\n                      ? \"\"\n                      : DATE(this.state.assessment_end_date, \"YYYY/MM/DD\")\n                  }\n                  onChange={(e) => {\n                    this.setState({\n                      assessment_end_date: e.target.value,\n                      error: null,\n                    });\n                  }}\n                  disabled={this.state.loading}\n                  className={`px-3 py-2 rounded-md border ${\n                    this.state.error?.target === \"assessment_end_date\"\n                      ? \"border-red-600 animate__animated animate__shakeX\"\n                      : \"border-gray-400\"\n                  } w-full text-sm`}\n                />\n                {this.state.error !== null &&\n                  this.state.error.target === \"assessment_end_date\" && (\n                    <div className=\"my-2\">\n                      <Alert\n                        alertType={AlertType.DANGER}\n                        title={\"Invalid input!\"}\n                        description={this.state.error.msg}\n                        close={() => {\n                          this.setState({\n                            error: null,\n                          });\n                        }}\n                      />\n                    </div>\n                  )}\n              </div>\n              {/* Description */}\n              <div className=\"flex flex-row w-full items-center justify-between gap-3 my-2 mt-7 text-primary-900\">\n                <div className=\"flex flex-col w-full rounded-md bg-primary-50 px-4 py-3 text-sm\">\n                  <span className=\"font-light\">Selected Level</span>\n                  <span className=\"font-bold\">\n                    {this.props.assessment_level}\n                  </span>\n                </div>\n                <div className=\"flex flex-col w-full rounded-md bg-primary-50 px-4 py-3 text-sm\">\n                  <span className=\"font-light\">Selected round</span>\n                  <span className=\"font-bold\">\n                    {this.props.assessment_round}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-span-6 flex flex-col gap-2\">\n              <div className=\"\">\n                <div className=\"flex flex-col w-full\">\n                  <span className=\"text-sm\">Assessor names</span>\n                  <input\n                    value={this.state.done_by}\n                    onChange={(e) => {\n                      this.setState({\n                        done_by: e.target.value,\n                        error: null,\n                      });\n                    }}\n                    disabled={this.state.loading}\n                    className={`px-3 py-2 rounded-md border ${\n                      this.state.error?.target === \"done_by\"\n                        ? \"border-red-600 animate__animated animate__shakeX\"\n                        : \"border-gray-400\"\n                    } w-full text-sm`}\n                  />\n                  {this.state.error !== null &&\n                    this.state.error.target === \"done_by\" && (\n                      <div className=\"my-2\">\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\"Invalid input!\"}\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                            });\n                          }}\n                        />\n                      </div>\n                    )}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-span-6\"></div>\n            {/* Other info STATUS */}\n            <div className=\"col-span-12 flex flex-row items-center gap-3 justify-end\">\n              {/* Status here */}\n              <div className=\"\">\n                <div className=\"font-bold text-lg mb-2\">\n                  Choose Assessment Outcome\n                </div>\n                <div className=\"flex flex-row items-center justify-end\">\n                  {[\n                    AssessmentOutcomeValues.NR,\n                    AssessmentOutcomeValues.OG,\n                    AssessmentOutcomeValues.R,\n                  ].map((item, i) => (\n                    <div\n                      key={i + 1}\n                      className={`${\n                        this.state.assessment_outcome === item\n                          ? \"bg-primary-100 text-primary-900 font-extrabold\"\n                          : \"text-gray-600 hover:bg-primary-50 hover:text-primary-800\"\n                      } text-sm p-1 pr-3 rounded-full flex flex-row items-center justify-center gap-2 cursor-pointer`}\n                      onClick={() =>\n                        this.setState({ assessment_outcome: item })\n                      }\n                    >\n                      <div>\n                        {this.state.assessment_outcome === item ? (\n                          <BsCheckCircleFill className=\"text-2xl\" />\n                        ) : (\n                          <MdRadioButtonUnchecked className=\"text-2xl\" />\n                        )}\n                      </div>\n                      <div className=\"truncate\">\n                        {item === AssessmentOutcomeValues.NR\n                          ? \"NOT RECOMMENDED\"\n                          : item === AssessmentOutcomeValues.OG\n                          ? \"ONGOING ASSESSMENT\"\n                          : \"RECOMMENDED\"}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"flex flex-row items-center justify-end mt-3 w-full\">\n                <div className=\"w-full\">\n                  <div className=\"my-2 w-full\">\n                    {this.state.error !== null &&\n                      this.state.error.target === \"main\" && (\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\"Error Occurred!\"}\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                              success: \"\",\n                            });\n                          }}\n                        />\n                      )}\n                  </div>\n                  {this.state.success !== \"\" && (\n                    <div className=\"my-2\">\n                      <Alert\n                        alertType={AlertType.SUCCESS}\n                        title={\"Action succeeded!\"}\n                        description={this.state.success}\n                        close={() => {\n                          this.setState({\n                            error: null,\n                            success: \"\",\n                          });\n                        }}\n                      />\n                    </div>\n                  )}\n                  <button\n                    type=\"submit\"\n                    disabled={this.state.loading}\n                    className=\"flex flex-row items-center justify-center gap-2 font-normal px-3 py-2 rounded-md cursor-pointer text-white bg-primary-800 hover:bg-primary-900\"\n                  >\n                    <div>\n                      {this.state.loading === true ? (\n                        <AiOutlineLoading3Quarters className=\"text-xl animate-spin\" />\n                      ) : (\n                        <MdSave className=\"text-xl\" />\n                      )}\n                    </div>\n                    <span>\n                      {this.state.loading === true\n                        ? \"Loading...\"\n                        : \"Save changes\"}\n                    </span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditAssessment;\n","import React, { Component } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport { MdSave } from \"react-icons/md\";\nimport {\n  ApplicationDetailsInterface,\n  AssessmentQuerySaveData,\n  FC_SendQuery,\n  RoundValues,\n} from \"../../../actions\";\nimport { DATE, GetDaysFromTwoDates } from \"../../../utils/functions\";\nimport Alert, { AlertType } from \"../../Alert/Alert\";\nimport { GetRoundName } from \"../Assessment\";\n\ninterface EditQueryProps {\n  onGoBack: () => void;\n  onSave: (reference_number: string) => void;\n  data: ApplicationDetailsInterface;\n  EditQuery: \"Issue\" | \"Response\";\n  selectedRound: RoundValues;\n  application_ref_number: string;\n  query_issued: string;\n  query_issued_date: string;\n  query_response: string;\n  query_response_date: string;\n}\ninterface EditQueryState {\n  loading: boolean;\n  success: string;\n  error: {\n    target:\n      | \"query_issued\"\n      | \"query_issued_date\"\n      | \"query_response\"\n      | \"query_response_date\"\n      | \"main\";\n    msg: string;\n  } | null;\n  application_ref_number: string;\n  query_issued: string;\n  query_issued_date: string;\n  query_response: string;\n  query_response_date: string;\n  type: \"Issue\" | \"Response\";\n}\n\nexport class EditQuery extends Component<EditQueryProps, EditQueryState> {\n  constructor(props: EditQueryProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: null,\n      success: \"\",\n      application_ref_number: this.props.data.application_ref_number,\n      query_issued: this.props.query_issued,\n      query_issued_date: this.props.query_issued_date,\n      query_response: this.props.query_response,\n      query_response_date: this.props.query_response_date,\n      type: this.props.EditQuery,\n    };\n  }\n  SubmitScreening = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.state.application_ref_number === \"\") {\n      return this.setState({\n        error: {\n          target: \"main\",\n          msg: \"Please select application reference number!\",\n        },\n      });\n    }\n    if (this.state.query_issued === \"\" && this.state.type === \"Issue\") {\n      return this.setState({\n        error: {\n          target: \"query_issued\",\n          msg: \"Please type the assessment query issue!\",\n        },\n      });\n    }\n    if (this.state.query_issued_date === \"\" && this.state.type === \"Issue\") {\n      return this.setState({\n        error: {\n          target: \"query_issued_date\",\n          msg: \"Please enter query issue date!\",\n        },\n      });\n    }\n    if (\n      this.state.query_response_date === \"\" &&\n      this.state.type === \"Response\"\n    ) {\n      return this.setState({\n        error: {\n          target: \"query_response_date\",\n          msg: \"Please enter date of query response from applicant!\",\n        },\n      });\n    }\n    if (this.state.query_response === \"\" && this.state.type === \"Response\") {\n      return this.setState({\n        error: {\n          target: \"query_response\",\n          msg: \"Please enter query response from applicant!\",\n        },\n      });\n    }\n    if (\n      this.state.query_issued_date !== \"\" &&\n      this.state.query_issued_date !== null &&\n      this.state.query_response_date !== null &&\n      this.state.query_response_date !== \"\"\n    ) {\n      if (\n        GetDaysFromTwoDates(\n          DATE(this.state.query_issued_date, \"MM/DD/YYYY\"),\n          DATE(this.state.query_response_date, \"MM/DD/YYYY\")\n        ) < 0\n      ) {\n        return this.setState({\n          error: {\n            target: \"query_response_date\",\n            msg: \"Invalid date, please the response date should be greater than or equal to issue date!\",\n          },\n        });\n      }\n    }\n    // Saving\n    this.setState({ loading: true });\n    const data_saved: AssessmentQuerySaveData = {\n      application_ref_number: this.props.data.application_ref_number,\n      query_issued: this.state.query_issued,\n      query_issued_date: DATE(this.state.query_issued_date, \"YYYY/MM/DD\"),\n      query_response: this.state.query_response,\n      query_response_date:\n        this.state.query_response_date === \"\" ||\n        this.state.query_response_date === null\n          ? null\n          : DATE(this.state.query_response_date, \"YYYY/MM/DD\"),\n      assessment_round: this.props.selectedRound,\n    };\n    console.log(\"Submitted: \", data_saved);\n    FC_SendQuery(\n      data_saved,\n      (\n        loading: boolean,\n        feedback: {\n          type: \"success\" | \"error\";\n          msg: string;\n        } | null\n      ) => {\n        this.setState({\n          loading: loading,\n        });\n        if (loading === false) {\n          if (feedback !== null) {\n            if (feedback.type === \"success\") {\n              //   OnSave\n              this.props.onSave(this.state.application_ref_number);\n            }\n            if (feedback.type === \"error\") {\n              this.setState({\n                error: {\n                  target: \"main\",\n                  msg: feedback.msg,\n                },\n                success: \"\",\n              });\n            }\n          }\n        }\n      }\n    );\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"bg-white rounded-md p-3 animate__animated animate__fadeIn\">\n          {/* Title here */}\n          <div></div>\n          {/* Details */}\n          <div className=\"flex flex-row items-center gap-3\">\n            <div className=\"\">\n              <div\n                onClick={this.props.onGoBack}\n                className={`bg-gray-100 cursor-pointer hover:bg-primary-100 hover:text-primary-800 flex items-center justify-center h-10 w-10 rounded-full`}\n              >\n                <BsArrowLeft className=\"text-3xl\" />\n              </div>\n            </div>\n            <div className=\"flex flex-col\">\n              <div className=\"text-xl font-extrabold\">\n                {GetRoundName(this.props.selectedRound)} Query details\n              </div>\n              <div className=\"text-xs\">\n                Fill the following fields to updated query details\n              </div>\n              {this.props.EditQuery === \"Response\" && (\n                <div className=\"flex flex-row items-center gap-2 mt-2\">\n                  <div\n                    onClick={() => this.setState({ type: \"Issue\" })}\n                    className={`px-3 py-2 rounded-md text-sm ${\n                      this.state.type === \"Issue\"\n                        ? \"font-bold cursor-not-allowed bg-primary-100 text-primary-900\"\n                        : \"cursor-pointer bg-gray-200 hover:bg-primary-50 hover:text-primary-900\"\n                    }`}\n                  >\n                    Query Issue\n                  </div>\n                  <div\n                    onClick={() => this.setState({ type: \"Response\" })}\n                    className={`px-3 py-2 rounded-md text-sm ${\n                      this.state.type === \"Response\"\n                        ? \"font-bold cursor-not-allowed bg-primary-100 text-primary-900\"\n                        : \"cursor-pointer bg-gray-200 hover:bg-primary-50 hover:text-primary-900\"\n                    }`}\n                  >\n                    Query Response\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          <form\n            onSubmit={this.SubmitScreening}\n            className=\"grid grid-cols-12 gap-3 mt-5\"\n          >\n            {this.state.type === \"Issue\" && (\n              <div className=\"col-span-6\">\n                <div className=\"flex flex-col w-full\">\n                  <span className=\"text-sm\">Date of query issue</span>\n                  <input\n                    type=\"date\"\n                    value={DATE(this.state.query_issued_date, \"YYYY/MM/DD\")}\n                    onChange={(e) => {\n                      this.setState({\n                        query_issued_date: e.target.value,\n                        error: null,\n                      });\n                    }}\n                    disabled={this.state.loading}\n                    className={`px-3 py-2 rounded-md border ${\n                      this.state.error?.target === \"query_issued_date\"\n                        ? \"border-red-600 animate__animated animate__shakeX\"\n                        : \"border-gray-400\"\n                    } w-full text-sm`}\n                  />\n                  {this.state.error !== null &&\n                    this.state.error.target === \"query_issued_date\" && (\n                      <div className=\"my-2\">\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\"Invalid input!\"}\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                            });\n                          }}\n                        />\n                      </div>\n                    )}\n                </div>\n                {/* Description here */}\n                <div className=\"flex flex-col w-full mt-3\">\n                  <span className=\"text-sm\">Describe query issue</span>\n                  <textarea\n                    value={this.state.query_issued}\n                    onChange={(e) => {\n                      this.setState({\n                        query_issued: e.target.value,\n                        error: null,\n                      });\n                    }}\n                    disabled={this.state.loading}\n                    className={`px-3 py-2 rounded-md border ${\n                      this.state.error?.target === \"query_issued\"\n                        ? \"border-red-600 animate__animated animate__shakeX\"\n                        : \"border-gray-400\"\n                    } w-full text-sm`}\n                  ></textarea>\n                  {this.state.error !== null &&\n                    this.state.error.target === \"query_issued\" && (\n                      <div className=\"my-2\">\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\"Invalid input!\"}\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                            });\n                          }}\n                        />\n                      </div>\n                    )}\n                </div>\n              </div>\n            )}\n            {/* ------------------------------------------------------ */}\n            {this.state.type === \"Response\" && (\n              <div className=\"col-span-6\">\n                <div className=\"flex flex-col w-full\">\n                  <span className=\"text-sm\">Date of qery response</span>\n                  <input\n                    type=\"date\"\n                    value={\n                      this.state.query_response_date === null\n                        ? \"\"\n                        : DATE(this.state.query_response_date, \"YYYY/MM/DD\")\n                    }\n                    onChange={(e) => {\n                      this.setState({\n                        query_response_date: e.target.value,\n                        error: null,\n                      });\n                    }}\n                    disabled={this.state.loading}\n                    className={`px-3 py-2 rounded-md border ${\n                      this.state.error?.target === \"query_response_date\"\n                        ? \"border-red-600 animate__animated animate__shakeX\"\n                        : \"border-gray-400\"\n                    } w-full text-sm`}\n                  />\n                  {this.state.error !== null &&\n                    this.state.error.target === \"query_response_date\" && (\n                      <div className=\"my-2\">\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\"Invalid input!\"}\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                            });\n                          }}\n                        />\n                      </div>\n                    )}\n                </div>\n                {/* Description */}\n                <div className=\"flex flex-col w-full mt-3\">\n                  <span className=\"text-sm\">Query response details</span>\n                  <textarea\n                    value={this.state.query_response}\n                    onChange={(e) => {\n                      this.setState({\n                        query_response: e.target.value,\n                        error: null,\n                      });\n                    }}\n                    disabled={this.state.loading}\n                    className={`px-3 py-2 rounded-md border ${\n                      this.state.error?.target === \"query_response\"\n                        ? \"border-red-600 animate__animated animate__shakeX\"\n                        : \"border-gray-400\"\n                    } w-full text-sm`}\n                  ></textarea>\n                  {this.state.error !== null &&\n                    this.state.error.target === \"query_response\" && (\n                      <div className=\"my-2\">\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\"Invalid input!\"}\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                            });\n                          }}\n                        />\n                      </div>\n                    )}\n                </div>\n              </div>\n            )}\n            <div className=\"col-span-6\"></div>\n\n            <div className=\"col-span-12\">\n              <div className=\"flex flex-row items-center justify-end mt-3 w-full\">\n                <div className=\"w-full\">\n                  <div className=\"my-2 w-full\">\n                    {this.state.error !== null &&\n                      this.state.error.target === \"main\" && (\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\"Error Occurred!\"}\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                              success: \"\",\n                            });\n                          }}\n                        />\n                      )}\n                  </div>\n                  {this.state.success !== \"\" && (\n                    <div className=\"my-2\">\n                      <Alert\n                        alertType={AlertType.SUCCESS}\n                        title={\"Action succeeded!\"}\n                        description={this.state.success}\n                        close={() => {\n                          this.setState({\n                            error: null,\n                            success: \"\",\n                          });\n                        }}\n                      />\n                    </div>\n                  )}\n                  <button\n                    type=\"submit\"\n                    disabled={this.state.loading}\n                    className=\"flex flex-row items-center justify-center gap-2 font-normal px-3 py-2 rounded-md cursor-pointer text-white bg-primary-800 hover:bg-primary-900\"\n                  >\n                    <div>\n                      {this.state.loading === true ? (\n                        <AiOutlineLoading3Quarters className=\"text-xl animate-spin\" />\n                      ) : (\n                        <MdSave className=\"text-xl\" />\n                      )}\n                    </div>\n                    <span>\n                      {this.state.loading === true\n                        ? \"Loading...\"\n                        : \"Save changes\"}\n                    </span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditQuery;\n","import React, { Component } from \"react\";\nimport { BiMessageSquareEdit } from \"react-icons/bi\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport { IoShieldCheckmarkSharp } from \"react-icons/io5\";\nimport { MdAddComment, MdSchedule } from \"react-icons/md\";\nimport {\n  ApplicationDetailsInterface,\n  AssessmentInterface,\n  AssessmentOutcomeValues,\n  AssessmentQueryInterface,\n  LevelsValues,\n  RoundsArray,\n  RoundValues,\n} from \"../../../actions\";\nimport { DATE } from \"../../../utils/functions\";\nimport {\n  FCGetAssessmentStatusElement,\n  GetLastAssessmentValue,\n  getLastQuery,\n  GetRoundName,\n  queryAnsweringNumberOfDays,\n  validateQuery90Days,\n} from \"../Assessment\";\nimport EditAssessment from \"../edit/EditAssessment\";\nimport EditQuery from \"../edit/EditQuery\";\n\ninterface AssessmentDetailsProps {\n  data: ApplicationDetailsInterface;\n  openAssessmentDetails: (status: boolean) => void;\n  onSave: (reference_number: string) => void;\n}\n\ninterface AssessmentDetailsState {\n  open_edit_assessment: {\n    selected_level: LevelsValues;\n    selected_round: RoundValues;\n    action_type: \"Update\" | \"Add\";\n    assessment_start_date: string;\n    assessment_end_date: string;\n    assessment_outcome: AssessmentOutcomeValues;\n    assessment_comment: string;\n    done_by: string;\n  } | null;\n  openQuery: {\n    EditQuery: \"Issue\" | \"Response\";\n    selectedRound: RoundValues;\n    application_ref_number: string;\n    query_issued: string;\n    query_issued_date: string;\n    query_response: string;\n    query_response_date: string;\n  } | null;\n}\n\nexport const ValidateAssessmentRound = (\n  round: RoundValues,\n  data: ApplicationDetailsInterface\n) => {\n  const temp_data = [];\n  if (data.assessments.length > 0) {\n    let i = data.assessments.length - 1;\n    while (i >= 0) {\n      temp_data.push(data.assessments[i]);\n      i = i - 1;\n    }\n    // Get data\n    const test = temp_data.find(\n      (itm) =>\n        itm.assessment_round === round &&\n        itm.assessment_level === LevelsValues.LEVEL_TWO\n    );\n    if (\n      test !== undefined &&\n      test.assessment_start_date !== null &&\n      test.assessment_end_date !== null\n    ) {\n      return test;\n    }\n  }\n  return null;\n};\n\nexport const ValidateQueryRound = (\n  round: RoundValues,\n  data: ApplicationDetailsInterface\n) => {\n  const temp_data: AssessmentQueryInterface[] = [];\n  if (data.assessmentqueries.length > 0) {\n    let i = data.assessmentqueries.length - 1;\n    while (i >= 0) {\n      temp_data.push(data.assessmentqueries[i]);\n      i = i - 1;\n    }\n    // Get data\n    const test = temp_data.find((itm) => itm.assessment_round === round);\n    if (\n      test !== undefined &&\n      test.query_issued_date !== null &&\n      test.query_response_date !== null &&\n      test.query_response !== \"\"\n    ) {\n      return test;\n    }\n  }\n  return null;\n};\n\nexport const ValidateDisplayRound = (\n  round: RoundValues,\n  data: ApplicationDetailsInterface\n) => {\n  if (round === RoundValues.ROUND_ONE) {\n    return true;\n  }\n  if (round === RoundValues.ROUND_TWO) {\n    if (ValidateQueryRound(RoundValues.ROUND_ONE, data) !== null) {\n      return true;\n    }\n  }\n  if (round === RoundValues.ROUND_THREE) {\n    if (ValidateQueryRound(RoundValues.ROUND_TWO, data) !== null) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const GetEmptyQueryElement = (props: {\n  round: RoundValues;\n  onClick: () => void;\n}) => {\n  return (\n    <div\n      onClick={props.onClick}\n      className=\"col-span-12 sm:cols-span-6 lg:col-span-4 flex flex-col items-center justify-center bg-white rounded border border-white hover:border-yellow-400 hover:bg-yellow-50 hover:text-yellow-700 cursor-pointer w-full h-full group px-2 py-2\"\n    >\n      <div>\n        <MdAddComment className=\"text-6xl text-gray-200 group-hover:text-yellow-700\" />\n      </div>\n      <div className=\"No query found font-normal text-sm\">\n        Query for {GetRoundName(props.round)}\n      </div>\n      <div className=\"text-xs font-bold text-gray-400 group-hover:text-yellow-700\">\n        Click here to add query\n      </div>\n    </div>\n  );\n};\n\nexport const GetQueryElement = (props: {\n  allData: ApplicationDetailsInterface;\n  data: AssessmentQueryInterface;\n  round: RoundValues;\n  onClick: () => void;\n  days_status: boolean;\n}) => {\n  return (\n    <div\n      onClick={props.onClick}\n      className=\"col-span-12 sm:cols-span-6 lg:col-span-4 flex flex-col bg-white rounded border border-white hover:border-primary-300 hover:bg-primary-50 hover:text-primary-900 cursor-pointer w-full h-full group px-3 py-2\"\n    >\n      <div className=\"flex flex-row items-center justify-between w-full\">\n        <div className=\"font-bold group-hover:text-primary-900\">\n          Query issued\n        </div>\n        <div className=\"rounded-full px-2 py-1 bg-primary-50 text-primary-900 font-bold group-hover:bg-primary-800 group-hover:text-white text-left text-xs\">\n          {DATE(props.data.query_issued_date)}\n        </div>\n      </div>\n      <div className=\"w-full text-left text-xs\">\n        <span>{props.data.query_issued}</span>\n      </div>\n      {props.data.query_response_date !== null &&\n      props.data.query_response_date !== \"\" &&\n      props.data.query_response !== \"\" ? (\n        <>\n          <div className=\"border-b w-full border-gray-300 group-hover:border-primary-700 my-3\"></div>\n          <div className=\"flex flex-row items-center justify-between w-full\">\n            <div className=\"font-bold group-hover:text-primary-900\">\n              Query response\n            </div>\n            <div className=\"rounded-full px-2 py-1 bg-primary-50 text-primary-900 font-bold group-hover:bg-primary-800 group-hover:text-white text-left text-xs\">\n              {DATE(props.data.query_response_date)}\n            </div>\n          </div>\n          <div className=\"w-full text-left text-xs\">\n            <span>{props.data.query_response}</span>\n          </div>\n        </>\n      ) : (\n        <div>\n          {/* Verify remaining days */}\n          {props.days_status === false && (\n            <div className=\"text-sm mt-2 font-extrabold bg-red-100 text-red-700 px-1 py-1 rounded-full animate__animated animate__bounceIn animate__infinite\">\n              This is taking{\" \"}\n              {Math.round(queryAnsweringNumberOfDays(props.allData) / 30)}{\" \"}\n              months to get response\n            </div>\n          )}\n          <div className=\"text-lg font-light mt-2 group-hover:underline text-yellow-700\">\n            Click to add response\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport class AssessmentDetails extends Component<\n  AssessmentDetailsProps,\n  AssessmentDetailsState\n> {\n  constructor(props: AssessmentDetailsProps) {\n    super(props);\n\n    this.state = {\n      open_edit_assessment: null,\n      openQuery: null,\n    };\n  }\n  GetLastAssessmentValue = () => {\n    if (this.props.data.assessments.length <= 0) {\n      return null;\n    }\n    const res =\n      this.props.data.assessments[this.props.data.assessments.length - 1];\n    return res;\n  };\n  FilterByRounds = (selected_round: RoundValues) => {\n    return this.props.data.assessments.filter(\n      (itm) => itm.assessment_round === selected_round\n    );\n  };\n  FindDataByLevelRound = (level: LevelsValues, selected_round: RoundValues) => {\n    const temp: AssessmentInterface[] = [];\n    let iteration =\n      this.props.data.assessments.length === 0\n        ? -1\n        : this.props.data.assessments.length - 1;\n    while (iteration >= 0) {\n      temp.push(this.props.data.assessments[iteration]);\n      iteration = iteration - 1;\n    }\n    const res = temp.find(\n      (itm) =>\n        itm.assessment_level === level &&\n        itm.assessment_round === selected_round\n    );\n    if (res === undefined) {\n      return null;\n    }\n    return res;\n  };\n  FindQueriesByRound = (selected_round: RoundValues) => {\n    const test = this.props.data.assessmentqueries.filter(\n      (itm) => itm.assessment_round === selected_round\n    );\n    return test.length === 0 ? [] : [test[test.length - 1]];\n  };\n  GetLastQuery = (round: RoundValues) => {\n    const temp = this.FindQueriesByRound(round);\n    const res = temp.find((itm) => itm.assessment_round === round);\n    if (res !== undefined) {\n      return res;\n    }\n    return null;\n  };\n  componentDidMount = () => {\n    if (this.props.data.assessments.length === 0) {\n      this.setState({\n        open_edit_assessment: {\n          selected_level: LevelsValues.LEVEL_ONE,\n          selected_round: RoundValues.ROUND_ONE,\n          action_type: \"Add\",\n          assessment_comment: \"\",\n          assessment_end_date: \"\",\n          assessment_outcome: AssessmentOutcomeValues.OG,\n          assessment_start_date: \"\",\n          done_by: \"\",\n        },\n      });\n    }\n  };\n\n  SetSelectQuery = (selected_round: RoundValues) => {\n    if (\n      ValidateAssessmentRound(selected_round, this.props.data) !== null &&\n      ValidateAssessmentRound(selected_round, this.props.data)\n        ?.assessment_outcome !== AssessmentOutcomeValues.R &&\n      ValidateAssessmentRound(selected_round, this.props.data)\n        ?.assessment_outcome !== AssessmentOutcomeValues.NR\n    ) {\n      this.setState({\n        openQuery: {\n          EditQuery:\n            this.GetLastQuery(selected_round) === null ? \"Issue\" : \"Response\",\n          selectedRound: selected_round,\n          application_ref_number: this.props.data.application_ref_number,\n          query_issued:\n            this.GetLastQuery(selected_round) === null\n              ? \"\"\n              : this.GetLastQuery(selected_round)!.query_issued,\n          query_issued_date:\n            this.GetLastQuery(selected_round) === null\n              ? \"\"\n              : this.GetLastQuery(selected_round)!.query_issued_date,\n          query_response:\n            this.GetLastQuery(selected_round) === null ||\n            this.GetLastQuery(selected_round)!.query_response === null\n              ? \"\"\n              : this.GetLastQuery(selected_round)!.query_response!,\n          query_response_date:\n            this.GetLastQuery(selected_round) === null ||\n            this.GetLastQuery(selected_round)!.query_response_date === null\n              ? \"\"\n              : this.GetLastQuery(selected_round)!.query_response_date!,\n        },\n      });\n    } else {\n      alert(\"Please you are not allowed to add query!\");\n    }\n  };\n\n  ReturnAssessmentRoundDetails = (props: {\n    title: string;\n    selected_level: LevelsValues;\n    selected_round: RoundValues;\n    waiting_status_component: JSX.Element;\n  }) => {\n    return (\n      <div\n        onClick={() => {\n          if (\n            (props.selected_level === LevelsValues.LEVEL_TWO &&\n              this.FindDataByLevelRound(\n                LevelsValues.LEVEL_ONE,\n                props.selected_round\n              ) !== null) ||\n            props.selected_level === LevelsValues.LEVEL_ONE\n          ) {\n            this.setState({\n              open_edit_assessment: {\n                selected_level: props.selected_level,\n                selected_round: props.selected_round,\n                action_type:\n                  this.FindDataByLevelRound(\n                    props.selected_level,\n                    props.selected_round\n                  ) === null\n                    ? \"Add\"\n                    : \"Update\",\n                assessment_comment:\n                  this.FindDataByLevelRound(\n                    props.selected_level,\n                    props.selected_round\n                  ) === null\n                    ? \"\"\n                    : this.FindDataByLevelRound(\n                        props.selected_level,\n                        props.selected_round\n                      )!.assessment_comment,\n                assessment_end_date:\n                  this.FindDataByLevelRound(\n                    props.selected_level,\n                    props.selected_round\n                  ) === null\n                    ? \"\"\n                    : this.FindDataByLevelRound(\n                        props.selected_level,\n                        props.selected_round\n                      )!.assessment_end_date,\n                assessment_outcome:\n                  this.FindDataByLevelRound(\n                    props.selected_level,\n                    props.selected_round\n                  ) === null\n                    ? AssessmentOutcomeValues.OG\n                    : this.FindDataByLevelRound(\n                        props.selected_level,\n                        props.selected_round\n                      )!.assessment_outcome,\n                assessment_start_date:\n                  this.FindDataByLevelRound(\n                    props.selected_level,\n                    props.selected_round\n                  ) === null\n                    ? \"\"\n                    : this.FindDataByLevelRound(\n                        props.selected_level,\n                        props.selected_round\n                      )!.assessment_start_date,\n                done_by:\n                  this.FindDataByLevelRound(\n                    props.selected_level,\n                    props.selected_round\n                  ) === null ||\n                  this.FindDataByLevelRound(\n                    props.selected_level,\n                    props.selected_round\n                  )!.done_by === undefined\n                    ? \"\"\n                    : this.FindDataByLevelRound(\n                        props.selected_level,\n                        props.selected_round\n                      )!.done_by!,\n              },\n            });\n          } else {\n            alert(\"You are required to complete the first assessment\");\n          }\n        }}\n        className=\"col-span-12 sm:cols-span-6 lg:col-span-4  bg-white rounded-md p-2 py-2 w-full flex flex-row gap-4 cursor-pointer border border-white hover:border-primary-300 hover:bg-primary-50 group h-full\"\n      >\n        <div>\n          <div\n            className={`${\n              this.FindDataByLevelRound(\n                props.selected_level,\n                props.selected_round\n              ) === null\n                ? \"bg-gray-100\"\n                : \"bg-primary-100\"\n            } group-hover:bg-white flex items-center justify-center h-28 w-28 rounded-md`}\n          >\n            <IoShieldCheckmarkSharp\n              className={`text-7xl ${\n                this.FindDataByLevelRound(\n                  props.selected_level,\n                  props.selected_round\n                ) === null\n                  ? \"text-gray-200\"\n                  : \"text-primary-700\"\n              } group-hover:text-primary-800`}\n            />\n          </div>\n        </div>\n        <div className=\"flex flex-col text-left\">\n          <div className=\"text-lg font-bold mb-1 group-hover:text-primary-800\">\n            {props.title}\n          </div>\n          {this.FindDataByLevelRound(\n            props.selected_level,\n            props.selected_round\n          ) === null ? (\n            <div>{props.waiting_status_component}</div>\n          ) : (\n            <div>\n              <div className=\"text-xs\">\n                Start date:{\" \"}\n                {DATE(\n                  this.FindDataByLevelRound(\n                    props.selected_level,\n                    props.selected_round\n                  )!.assessment_start_date\n                )}\n              </div>\n              <div className=\"text-xs\">\n                Ending date:{\" \"}\n                {DATE(\n                  this.FindDataByLevelRound(\n                    props.selected_level,\n                    props.selected_round\n                  )!.assessment_end_date\n                )}\n              </div>\n              <div className=\"text-xs\">\n                Comment:{\" \"}\n                {\n                  this.FindDataByLevelRound(\n                    props.selected_level,\n                    props.selected_round\n                  )!.assessment_comment\n                }\n              </div>\n              <div className=\"my-1\"></div>\n              {\n                <FCGetAssessmentStatusElement\n                  assessment_status={\n                    this.FindDataByLevelRound(\n                      props.selected_level,\n                      props.selected_round\n                    )!.assessment_outcome\n                  }\n                  loading={\n                    GetLastAssessmentValue(this.props.data.assessments)\n                      ?.assessment_level !== LevelsValues.LEVEL_ONE\n                      ? false\n                      : true\n                  }\n                />\n              }\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  validateAssessmentQuery = () => {\n    if (\n      this.props.data.assessmentqueries.length > 0 &&\n      getLastQuery(this.props.data) !== null &&\n      validateQuery90Days(this.props.data) === \"INVALID\" &&\n      (getLastQuery(this.props.data)!.query_response_date === null ||\n        getLastQuery(this.props.data)!.query_response_date !== \"\")\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  render() {\n    const waiting_status_component = (\n      <div>\n        <div className=\"font-light\">Click here to add details</div>\n        <div className=\"flex flex-row items-center gap-2 rounded-full p-1 bg-gray-100 text-gray-900 border border-gray-300 font-bold text-xs pr-3 w-max mt-1\">\n          <div>\n            <MdSchedule className=\"text-xl animate-pulse\" />\n          </div>\n          <div>{\"Waiting\"}</div>\n        </div>\n      </div>\n    );\n    if (this.state.open_edit_assessment !== null) {\n      return (\n        <EditAssessment\n          onGoBack={() => {\n            this.setState({ open_edit_assessment: null });\n            if (this.props.data.assessments.length === 0) {\n              this.props.openAssessmentDetails(false);\n            }\n          }}\n          data={this.props.data}\n          onSave={(application_ref_number: string) => {\n            this.setState({ open_edit_assessment: null });\n            this.props.onSave(application_ref_number);\n          }}\n          assessment_level={this.state.open_edit_assessment.selected_level}\n          assessment_round={this.state.open_edit_assessment.selected_round}\n          action_type={this.state.open_edit_assessment.action_type}\n          assessment_start_date={\n            this.state.open_edit_assessment.assessment_start_date\n          }\n          assessment_end_date={\n            this.state.open_edit_assessment.assessment_end_date\n          }\n          assessment_outcome={\n            this.state.open_edit_assessment.assessment_outcome\n          }\n          assessment_comment={\n            this.state.open_edit_assessment.assessment_comment\n          }\n          done_by={this.state.open_edit_assessment.done_by}\n        />\n      );\n    }\n    if (this.state.openQuery !== null) {\n      return (\n        <EditQuery\n          onGoBack={() => {\n            this.setState({ openQuery: null });\n            if (this.props.data.assessments.length === 0) {\n              this.props.openAssessmentDetails(false);\n            }\n          }}\n          onSave={(application_ref_number: string) => {\n            this.setState({ openQuery: null });\n            this.props.onSave(application_ref_number);\n          }}\n          data={this.props.data}\n          EditQuery={this.state.openQuery.EditQuery}\n          selectedRound={this.state.openQuery.selectedRound}\n          application_ref_number={this.state.openQuery.application_ref_number}\n          query_issued={this.state.openQuery.query_issued}\n          query_issued_date={this.state.openQuery.query_issued_date}\n          query_response={this.state.openQuery.query_response}\n          query_response_date={this.state.openQuery.query_response_date}\n        />\n      );\n    }\n    return (\n      <div className=\"animate__animated animate__fadeIn rounded-md bg-white p-3\">\n        <div className=\"flex flex-row items-center gap-2\">\n          <div>\n            <div\n              onClick={() => this.props.openAssessmentDetails(false)}\n              className=\"flex items-center justify-center h-10 w-10 rounded-full bg-gray-100 hover:bg-primary-100 hover:text-primary-900 cursor-pointer\"\n            >\n              <BsArrowLeft className=\"text-2xl\" />\n            </div>\n          </div>\n          <div className=\"font-extrabold text-xl flex flex-col\">\n            <span>Assessment details</span>\n            <span className=\"text-sm font-light\">\n              This is the historical information for application assessment\n              phases\n            </span>\n          </div>\n        </div>\n        {/* Details */}\n        <div className=\"my-3\">\n          {this.props.data.assessments.length === 0 ? (\n            <div className=\"w-full rounded-md bg-gray-200 text-lg font-light px-3 py-2\">\n              No assessment found!\n            </div>\n          ) : (\n            RoundsArray.filter(\n              (itm) => ValidateDisplayRound(itm, this.props.data) === true\n            ).map((selected_round, r) => (\n              <div\n                key={r + 2}\n                className=\"w-full mt-3 bg-gray-100 p-3 rounded-md\"\n              >\n                <div className=\"mb-2 font-bold flex flex-col gap-3 text-base text-gray-500\">\n                  {GetRoundName(selected_round)} assessment details\n                </div>\n                <div className=\"grid grid-cols-12 items-center justify-center text-center gap-3 w-full\">\n                  <this.ReturnAssessmentRoundDetails\n                    selected_level={LevelsValues.LEVEL_ONE}\n                    selected_round={selected_round}\n                    title=\"First assessment\"\n                    waiting_status_component={waiting_status_component}\n                  />\n                  <this.ReturnAssessmentRoundDetails\n                    selected_level={LevelsValues.LEVEL_TWO}\n                    selected_round={selected_round}\n                    title=\"Second assessment\"\n                    waiting_status_component={waiting_status_component}\n                  />\n                  {this.GetLastQuery(selected_round) === null ? (\n                    <GetEmptyQueryElement\n                      round={selected_round}\n                      onClick={() => {\n                        this.SetSelectQuery(selected_round);\n                      }}\n                    />\n                  ) : (\n                    <GetQueryElement\n                      allData={this.props.data}\n                      data={this.GetLastQuery(selected_round)!}\n                      round={selected_round}\n                      onClick={() => {\n                        this.SetSelectQuery(selected_round);\n                      }}\n                      days_status={this.validateAssessmentQuery()}\n                    />\n                  )}\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n        {this.props.data.assessments.length === 0 && (\n          <div className=\"mt-5 flex flex-row items-center gap-2\">\n            <div\n              onClick={() => {\n                this.setState({\n                  open_edit_assessment: {\n                    selected_level: LevelsValues.LEVEL_ONE,\n                    selected_round: RoundValues.ROUND_ONE,\n                    action_type: \"Add\",\n                    assessment_comment: \"\",\n                    assessment_end_date: \"\",\n                    assessment_outcome: AssessmentOutcomeValues.OG,\n                    assessment_start_date: \"\",\n                    done_by: \"\",\n                  },\n                });\n              }}\n              className=\"px-3 py-2 text-sm font-bold rounded-md bg-primary-100 text-primary-900 hover:bg-primary-800 hover:text-white cursor-pointer w-max flex flex-row items-center gap-2\"\n            >\n              <div>\n                <BiMessageSquareEdit className=\"text-2xl\" />\n              </div>\n              <span>Update Assessment</span>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BsInfoCircleFill } from \"react-icons/bs\";\nimport { ApplicationDetailsInterface } from \"../../actions\";\nimport {\n  ApplicationCurrentState,\n  CurrentStatusEnum,\n  GetDaysQueryWaitingForAssessment,\n} from \"./Assessment\";\n\ninterface ApplicationStatusProps {\n  data: ApplicationDetailsInterface;\n}\ninterface ApplicationStatusState {\n  loading: boolean;\n}\n\nexport class ApplicationStatus extends Component<\n  ApplicationStatusProps,\n  ApplicationStatusState\n> {\n  constructor(props: ApplicationStatusProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  render() {\n    return (\n      <div>\n        {ApplicationCurrentState(this.props.data) !==\n          CurrentStatusEnum.NULL && (\n          <div className=\"flex flex-row items-center gap-3 bg-yellow-50 text-black w-full px-2 py-2 pr-4 border border-yellow-300 rounded-md\">\n            <div>\n              <BsInfoCircleFill className=\"text-5xl text-yellow-700 animate__animated animate__pulse animate__infinite\" />\n            </div>\n            <div className=\"flex flex-col\">\n              <span className=\"font-light text-xl\">\n                {\"Application current step\"}\n              </span>\n              <span className=\"font-extrabold text-sm text-yellow-700\">\n                {ApplicationCurrentState(this.props.data)}{\" \"}\n                {GetDaysQueryWaitingForAssessment(this.props.data) > 0 &&\n                  `FOR ${GetDaysQueryWaitingForAssessment(\n                    this.props.data\n                  )} DAYS`}\n              </span>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport { ApplicationDetailsInterface } from \"../../../actions\";\nimport { commaFy } from \"../../../utils/functions\";\n\ninterface ApplicationDetailsDashboardProps {\n  data: ApplicationDetailsInterface;\n  modal: boolean;\n  onGoBack: () => void;\n}\ninterface ApplicationDetailsDashboardState {\n  loading: boolean;\n}\n\nexport class ApplicationDetailsDashboard extends Component<\n  ApplicationDetailsDashboardProps,\n  ApplicationDetailsDashboardState\n> {\n  constructor(props: ApplicationDetailsDashboardProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  TotalDownTime = () => {\n    let total = 0;\n    for (const item of this.props.data.assessmentqueries) {\n      total += item.down_time;\n    }\n    return total;\n  };\n  render() {\n    return (\n      <div className=\"-mx-3 -mt-3\">\n        <div\n          className={`bg-gray-200 grid grid-cols-12 gap-3 pb-2 pt-0 ${\n            this.props.modal === true ? \"px-2\" : \"\"\n          }`}\n        >\n          {this.props.modal === true && (\n            <div className=\"col-span-12\">\n              <div className=\"font-extrabold mt-3 mb-3 text-2xl flex flex-row items-center gap-3 px-2\">\n                <div>\n                  <div\n                    onClick={this.props.onGoBack}\n                    className=\"flex items-center justify-center h-10 w-10 bg-white hover:bg-primary-800 hover:text-white rounded-full cursor-pointer\"\n                  >\n                    <BsArrowLeft className=\"text-3xl\" />\n                  </div>\n                </div>\n                <div>Application details</div>\n              </div>\n            </div>\n          )}\n          <div className=\"col-span-12 sm:col-span-6 lg:col-span-3 rounded-md bg-white flex flex-col items-center justify-center p-3 text-center text-primary-800 shadow\">\n            <span className=\"font-extrabold text-3xl\">\n              {commaFy(this.props.data.current_days)}\n            </span>\n            <span className=\"font-bold text-sm\">Current days</span>\n            {/* <span className=\"text-xs\">\n              Difference between today’s date and the dates of reception\n            </span> */}\n          </div>\n          <div className=\"col-span-12 sm:col-span-6 lg:col-span-3 rounded-md bg-white flex flex-col items-center justify-center p-3 text-center text-green-600 shadow\">\n            <span className=\"font-extrabold text-3xl\">\n              {commaFy(this.props.data.up_time)}\n            </span>\n            <span className=\"font-bold text-sm\">Up Time</span>\n            {/* <span className=\"text-xs\">\n              Number of days between the issue of the certificate and the date\n              of reception\n            </span> */}\n          </div>\n          <div className=\"col-span-12 sm:col-span-6 lg:col-span-3 rounded-md bg-white flex flex-col items-center justify-center p-3 text-center text-yellow-800 shadow\">\n            <span className=\"font-extrabold text-3xl\">\n              {commaFy(\n                this.props.data.assessmentqueries.length === 0\n                  ? 0\n                  : this.TotalDownTime()\n              )}\n            </span>\n            <span className=\"font-bold text-sm\">Down Time</span>\n            {/* <span className=\"text-xs\">\n              Number of days taken by the applicant to respond to queries\n            </span> */}\n          </div>\n          <div className=\"col-span-12 sm:col-span-6 lg:col-span-3 rounded-md bg-white flex flex-col items-center justify-center p-3 text-center text-gray-600 shadow\">\n            <span className=\"font-extrabold text-3xl\">\n              {this.props.data.up_time === 0\n                ? commaFy(\n                    Math.abs(\n                      this.TotalDownTime() - this.props.data.current_days\n                    )\n                  )\n                : commaFy(\n                    Math.abs(this.TotalDownTime() - this.props.data.up_time)\n                  )}\n            </span>\n            <span className=\"font-bold text-sm\">Processing days</span>\n            {/* <span className=\"text-xs\">\n              Number of days between up time and down time\n            </span> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  ApplicationDetailsInterface,\n  DownloadCertificate,\n  PeerReviewStatusValues,\n  RegistrationStates,\n} from \"../../actions\";\nimport Assessment from \"./Assessment\";\nimport PeerReview from \"./PeerReview\";\nimport Screening from \"./Screening\";\nimport { ScreeningDetails } from \"./details/ScreeningDetails\";\nimport { PeerReviewDetails } from \"./details/PeerReviewDetails\";\nimport { AssessmentDetails } from \"./details/AssessmentDetails\";\nimport { IoMdCheckmarkCircle } from \"react-icons/io\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport { HiOutlineDownload } from \"react-icons/hi\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { MdAddTask } from \"react-icons/md\";\nimport { RegisterProduct } from \"../RegisterProduct/RegisterProduct\";\nimport { ApplicationStatus } from \"./ApplicationStatus\";\nimport { ApplicationDetailsDashboard } from \"./ApplicationDetailsDashboard/ApplicationDetailsDashboard\";\nimport {\n  CreateApplication,\n  CreateApplicationInterface,\n} from \"../../containers/CreateApplication/CreateApplication\";\nimport { DATE } from \"../../utils/functions\";\n\ninterface ApplicationDetailsProps {\n  data: ApplicationDetailsInterface;\n  modal: boolean;\n  onClose: () => void;\n  source: \"search\" | \"list\";\n  onUpdate: (reference_number: string) => void;\n  FC_SetSuccess: (msg: string) => void;\n  FC_Error: (msg: string) => void;\n}\n\ninterface ApplicationDetailsState {\n  open_screening: boolean;\n  open_peer_review: boolean;\n  open_assessment: boolean;\n  loading: boolean;\n  register_product: boolean;\n  edit_application: CreateApplicationInterface | null;\n}\n\nexport class ApplicationDetails extends Component<\n  ApplicationDetailsProps,\n  ApplicationDetailsState\n> {\n  constructor(props: ApplicationDetailsProps) {\n    super(props);\n\n    this.state = {\n      open_screening: false,\n      open_peer_review: false,\n      open_assessment: false,\n      loading: false,\n      register_product: false,\n      edit_application: null,\n    };\n  }\n  DownloadRegistrationCertificate = () => {\n    this.setState({ loading: true });\n    DownloadCertificate(\n      this.props.data.application_ref_number,\n      (\n        loading: boolean,\n        feedback: {\n          type: \"success\" | \"error\";\n          msg: string;\n        } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (feedback?.type === \"success\") {\n          this.props.FC_SetSuccess(\n            feedback.msg === \"\"\n              ? \"Certificate downloaded successfully!\"\n              : feedback.msg\n          );\n        } else {\n          if (feedback?.type === \"error\") {\n            if (feedback.msg === \"\") {\n              alert(\"Failed to download, please try again!\");\n            } else {\n              alert(feedback.msg);\n            }\n          }\n        }\n      }\n    );\n  };\n  render() {\n    if (this.state.edit_application !== null) {\n      return (\n        <CreateApplication\n          editData={this.state.edit_application}\n          display={\"Page\"}\n          onBack={() => this.setState({ edit_application: null })}\n          onSave={() => {\n            this.props.onUpdate(\n              this.state.edit_application!.application_ref_number\n            );\n            this.props.FC_SetSuccess(\n              `Data of ${\n                this.state.edit_application!.application_ref_number\n              } application has updated successfully!`\n            );\n            this.setState({ edit_application: null });\n          }}\n          type={\"Edit\"}\n        />\n      );\n    }\n    if (this.state.open_screening === true) {\n      return (\n        <ScreeningDetails\n          data={this.props.data}\n          openScreeningDetails={(status: boolean) =>\n            this.setState({ open_screening: status })\n          }\n          onSave={(reference_number: string) => {\n            this.setState({ open_screening: false });\n            this.props.onUpdate(reference_number);\n            this.props.FC_SetSuccess(\n              `Screening data of ${reference_number} application has updated successfully!`\n            );\n          }}\n          modal={this.props.modal}\n        />\n      );\n    }\n    if (this.state.open_peer_review === true) {\n      return (\n        <PeerReviewDetails\n          data={this.props.data}\n          openPeerReviewDetails={(status: boolean) =>\n            this.setState({ open_peer_review: status })\n          }\n          onSave={(reference_number: string) => {\n            this.setState({ open_peer_review: false });\n            this.props.onUpdate(reference_number);\n            this.props.FC_SetSuccess(\n              `Peer review data of ${reference_number} application has updated successfully!`\n            );\n          }}\n          modal={this.props.modal}\n        />\n      );\n    }\n    if (this.state.open_assessment === true) {\n      return (\n        <AssessmentDetails\n          data={this.props.data}\n          openAssessmentDetails={(status: boolean) =>\n            this.setState({ open_assessment: status })\n          }\n          onSave={(reference_number: string) => {\n            this.setState({ open_screening: false });\n            this.props.onUpdate(reference_number);\n            this.props.FC_SetSuccess(\n              `Assessment Outcome for ${reference_number} application has updated successfully!`\n            );\n          }}\n        />\n      );\n    }\n    if (this.state.register_product === true) {\n      return (\n        <RegisterProduct\n          type={\"Add\"}\n          display={this.props.modal === true ? \"Modal\" : \"Page\"}\n          editData={{\n            application_ref_number: this.props.data.application_ref_number,\n            distribution_category: \"\",\n            name_of_marketing_authorization_holder: \"\",\n            name_of_the_active_ingredient: \"\",\n            pack_size: \"\",\n            pack_type: \"\",\n            registration_number: \"\",\n            shelf_life_in_month: \"\",\n            storage_statement: \"\",\n            therapeutic_indication: \"\",\n            date_ma_certificate_issued_to_applicant: \"\",\n            product_category: \"\",\n          }}\n          onBack={() => this.setState({ register_product: false })}\n          onSave={() => {\n            this.setState({ register_product: false });\n            this.props.onUpdate(this.props.data.application_ref_number);\n            this.props.FC_SetSuccess(\n              `Product for ${this.props.data.application_ref_number} has been registered successfully!`\n            );\n          }}\n        />\n      );\n    }\n    return (\n      <div className=\"animate__animated animate__fadeIn\">\n        <div className=\"mb-3\">\n          <ApplicationDetailsDashboard\n            data={this.props.data}\n            modal={this.props.modal}\n            onGoBack={() => {\n              this.props.onClose();\n            }}\n          />\n        </div>\n        <div className=\"grid grid-cols-12\">\n          <div className=\"col-span-12 lg:col-span-6 pr-5\">\n            <div className=\"text-xl font-extrabold mb-3 flex flex-row items-center justify-between\">\n              <span>Application details</span>\n              <div\n                onClick={() =>\n                  this.setState({\n                    edit_application: {\n                      applicant_address:\n                        this.props.data.applicant_address === null\n                          ? \"\"\n                          : this.props.data.applicant_address,\n                      applicant_name: this.props.data.applicant_name,\n                      application_ref_number:\n                        this.props.data.application_ref_number,\n                      created_by: \"1\",\n                      date_ma_certificate_issued_to_applicant: \"null\",\n                      local_technical_representative:\n                        this.props.data.local_technical_representative,\n                      manufacturer_name_and_country:\n                        this.props.data.manufacturer_name_and_country,\n                      manufacturing_site_address:\n                        this.props.data.manufacturing_site_address === null\n                          ? \"\"\n                          : this.props.data.manufacturing_site_address,\n                      product_brand_name: this.props.data.product_brand_name,\n                      product_common_name: this.props.data.product_common_name,\n                      product_dosage_form: this.props.data.product_dosage_form,\n                      product_strength: this.props.data.product_strength,\n                      registration_Status: this.props.data.registration_Status,\n                      submission_date: this.props.data.submission_date,\n                    },\n                  })\n                }\n                className=\"bg-primary-100 text-primary-900 hover:text-white hover:bg-primary-800 rounded font-bold text-sm w-max px-3 py-2 cursor-pointer\"\n              >\n                Edit application\n              </div>\n            </div>\n            {/* Other data */}\n            <div className=\"animate__animated animate__fadeIn\">\n              <div className=\"flex flex-col my-3 bg-gray-100 rounded-lg px-2 py-2\">\n                <span className=\"text-sm font-light\">Reference Number</span>\n                <div className=\"rounded-xl px-2 border border-white font-semibold bg-primary-100 text-primary-900 w-max text-sm\">\n                  {this.props.data.application_ref_number}\n                </div>\n              </div>\n              <div className=\"flex flex-col my-3 bg-gray-100 rounded-lg px-2 py-2\">\n                <span className=\"text-sm font-light\">Submission date</span>\n                <div className=\"rounded-xl px-2 border border-white font-semibold bg-primary-100 text-primary-900 w-max text-sm\">\n                  {DATE(this.props.data.submission_date)}\n                </div>\n              </div>\n              <div className=\"flex flex-col my-3 bg-gray-100 rounded-lg px-2 py-2\">\n                <span className=\"text-sm font-light\">Applicant Names</span>\n                <span className=\"text-sm font-semibold\">\n                  {this.props.data.applicant_name}\n                </span>\n              </div>\n              <div className=\"flex flex-col my-3 bg-gray-100 rounded-lg px-2 py-2\">\n                <span className=\"text-sm font-light\">Brand Name</span>\n                <span className=\"text-sm font-semibold\">\n                  {this.props.data.product_brand_name}\n                </span>\n              </div>\n              <div className=\"flex flex-col my-3 bg-gray-100 rounded-lg px-2 py-2\">\n                <span className=\"text-sm font-light\">Product common name</span>\n                <span className=\"text-sm font-semibold\">\n                  {this.props.data.product_common_name}\n                </span>\n              </div>\n              <div className=\"flex flex-col my-3 bg-gray-100 rounded-lg px-2 py-2\">\n                <span className=\"text-sm font-light\">\n                  Country of manufacturer\n                </span>\n                <span className=\"text-sm font-semibold\">\n                  {this.props.data.manufacturer_name_and_country}\n                </span>\n              </div>\n              <div className=\"flex flex-col my-3 bg-gray-100 rounded-lg px-2 py-2\">\n                <span className=\"text-sm font-light\">Product strength</span>\n                <span className=\"text-sm font-semibold\">\n                  {this.props.data.product_strength}\n                </span>\n              </div>\n              <div className=\"flex flex-col my-3 bg-gray-100 rounded-lg px-2 py-2\">\n                <span className=\"text-sm font-light\">\n                  Product dosage form and appearance\n                </span>\n                <span className=\"text-sm font-semibold\">\n                  {this.props.data.product_dosage_form}\n                </span>\n              </div>\n              <div className=\"flex flex-col my-3 bg-gray-100 rounded-lg px-2 py-2\">\n                <span className=\"text-sm font-light\">\n                  Local Technical Representative (LTR)\n                </span>\n                <span className=\"text-sm font-semibold\">\n                  {this.props.data.local_technical_representative}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-span-12 lg:col-span-6\">\n            <div className=\"text-xl font-extrabold mb-3\">The progress</div>\n            {/* Details here */}\n            <div className=\"flex flex-col gap-3 w-full\">\n              <ApplicationStatus data={this.props.data} />\n              <Screening\n                data={this.props.data}\n                openScreeningDetails={(status: boolean) =>\n                  this.setState({ open_screening: status })\n                }\n              />\n              <Assessment\n                data={this.props.data}\n                openAssessmentDetails={(status: boolean) =>\n                  this.setState({ open_assessment: status })\n                }\n              />\n              <PeerReview\n                data={this.props.data}\n                openPeerReview={(status: boolean) =>\n                  this.setState({ open_peer_review: status })\n                }\n              />\n              <div className=\"flex flex-row items-center justify-between gap-3 my-4 border rounded-md px-4 py-3 bg-gray-100\">\n                <div className=\"flex flex-col gap-2\">\n                  <span className=\"text-sm font-bold\">\n                    Application registration status\n                  </span>\n                  {this.props.data.registration_Status ===\n                  RegistrationStates.REGISTERED ? (\n                    <div className=\"flex flex-row items-center gap-2 rounded-full p-1 bg-green-50 text-green-700 border border-green-400 font-bold text-xs pr-3 w-max\">\n                      <div>\n                        <IoMdCheckmarkCircle className=\"text-2xl\" />\n                      </div>\n                      <div>{this.props.data.registration_Status}</div>\n                    </div>\n                  ) : (\n                    <div className=\"flex flex-row items-center gap-2 rounded-full p-1 bg-gray-50 text-gray-700 border border-gray-300 font-bold text-xs pr-3 w-max\">\n                      <div>\n                        <RiErrorWarningLine className=\"text-2xl animate-pulse\" />\n                      </div>\n                      <div>{this.props.data.registration_Status}</div>\n                    </div>\n                  )}\n                </div>\n                {this.props.data.registration_Status ===\n                  RegistrationStates.REGISTERED && (\n                  <div\n                    onClick={() => {\n                      this.DownloadRegistrationCertificate();\n                    }}\n                    className=\"flex flex-row items-center justify-center gap-2 px-3 py-2 rounded-md cursor-pointer bg-white hover:bg-green-600 text-green-700 hover:text-white font-bold text-sm border border-green-600 w-max\"\n                  >\n                    <div>\n                      {this.state.loading === true ? (\n                        <AiOutlineLoading3Quarters className=\"text-2xl animate-spin\" />\n                      ) : (\n                        <HiOutlineDownload className=\"text-2xl\" />\n                      )}\n                    </div>\n                    <span>Registration Certificate</span>\n                  </div>\n                )}\n                {this.props.data.registration_Status !==\n                  RegistrationStates.REGISTERED &&\n                  this.props.data.peerreviews.length > 0 &&\n                  this.props.data.peerreviews[\n                    this.props.data.peerreviews.length - 1\n                  ].status.toUpperCase() ===\n                    PeerReviewStatusValues.approved.toUpperCase() && (\n                    <div\n                      onClick={() => {\n                        this.setState({ register_product: true });\n                      }}\n                      className=\"flex flex-row items-center justify-center gap-2 px-3 py-2 rounded-md cursor-pointer bg-primary-800 hover:bg-primary-900 text-white font-bold text-sm w-max\"\n                    >\n                      <div>\n                        {this.state.loading === true ? (\n                          <AiOutlineLoading3Quarters className=\"text-2xl animate-spin\" />\n                        ) : (\n                          <MdAddTask className=\"text-2xl\" />\n                        )}\n                      </div>\n                      <span>Register product now</span>\n                    </div>\n                  )}\n              </div>\n            </div>\n            {\n              <div className=\"mt-8 flex flex-row justify-end\">\n                {/* <div\n                  onClick={() =>\n                    this.setState({\n                      edit_application: {\n                        applicant_address:\n                          this.props.data.applicant_address === null\n                            ? \"\"\n                            : this.props.data.applicant_address,\n                        applicant_name: this.props.data.applicant_name,\n                        application_ref_number:\n                          this.props.data.application_ref_number,\n                        created_by: \"1\",\n                        date_ma_certificate_issued_to_applicant: \"null\",\n                        local_technical_representative:\n                          this.props.data.local_technical_representative,\n                        manufacturer_name_and_country:\n                          this.props.data.manufacturer_name_and_country,\n                        manufacturing_site_address:\n                          this.props.data.manufacturing_site_address === null\n                            ? \"\"\n                            : this.props.data.manufacturing_site_address,\n                        product_brand_name: this.props.data.product_brand_name,\n                        product_common_name:\n                          this.props.data.product_common_name,\n                        product_dosage_form:\n                          this.props.data.product_dosage_form,\n                        product_strength: this.props.data.product_strength,\n                        registration_Status:\n                          this.props.data.registration_Status,\n                        submission_date: this.props.data.submission_date,\n                      },\n                    })\n                  }\n                  className=\"bg-primary-100 text-primary-900 hover:text-white hover:bg-primary-800 rounded font-bold text-sm w-max px-3 py-2 cursor-pointer\"\n                >\n                  Edit application\n                </div> */}\n                {this.props.modal === true && (\n                  <div\n                    onClick={this.props.onClose}\n                    className=\"bg-gray-500 text-white hover:bg-gray-600 rounded font-bold text-sm w-max px-3 py-2 cursor-pointer\"\n                  >\n                    Close window\n                  </div>\n                )}\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport { IoAddCircleOutline, IoSaveOutline } from \"react-icons/io5\";\nimport { FC_RegisterProduct } from \"../../actions\";\nimport Alert, { AlertType } from \"../Alert/Alert\";\nimport MainContainer from \"../MainContainer/MainContainer\";\n\nexport const FormInput = (props: {\n  title: string;\n  value: string;\n  onChange: (value: string) => void;\n  type: \"text\" | \"number\" | \"date\";\n  disabled: boolean;\n  error: {\n    target: string;\n    msg: string;\n  };\n  error_key_name: string;\n  onCloseError: () => void;\n}) => {\n  return (\n    <div className=\"w-full\">\n      <span className=\"text-sm\">{props.title}</span>\n      <input\n        type={props.type}\n        value={props.value}\n        onChange={(e) => {\n          props.onChange(e.target.value);\n        }}\n        disabled={props.disabled}\n        className={`px-3 py-2 rounded-md border font-bold ${\n          props.error.target === props.error_key_name\n            ? \"border-red-600\"\n            : \"border-primary-800\"\n        } w-full text-sm`}\n      />\n      {props.error.target === props.error_key_name && (\n        <Alert\n          alertType={AlertType.DANGER}\n          title={\n            props.error.target === props.error_key_name\n              ? \"Invalid input!\"\n              : \"Error Occurred\"\n          }\n          description={props.error.msg}\n          close={props.onCloseError}\n        />\n      )}\n    </div>\n  );\n};\n\nexport interface RegisterProductDataInterface {\n  registration_number: string;\n  application_ref_number: string;\n  name_of_the_active_ingredient: string;\n  therapeutic_indication: string;\n  pack_size: string;\n  pack_type: string;\n  shelf_life_in_month: string;\n  storage_statement: string;\n  distribution_category: string;\n  name_of_marketing_authorization_holder: string;\n  date_ma_certificate_issued_to_applicant: string;\n  product_category: string;\n}\n\ninterface RegisterProductProps {\n  type: \"Edit\" | \"Add\";\n  display: \"Page\" | \"Modal\";\n  editData: RegisterProductDataInterface;\n  onBack: () => void;\n  onSave: () => void;\n}\ninterface RegisterProductState {\n  registration_number: string;\n  application_ref_number: string;\n  name_of_the_active_ingredient: string;\n  therapeutic_indication: string;\n  pack_size: string;\n  pack_type: string;\n  shelf_life_in_month: string;\n  storage_statement: string;\n  distribution_category: string;\n  name_of_marketing_authorization_holder: string;\n  date_ma_certificate_issued_to_applicant: string;\n  product_category: string;\n  loading: boolean;\n  success: string;\n  error: {\n    target:\n      | \"registration_number\"\n      | \"application_ref_number\"\n      | \"name_of_the_active_ingredient\"\n      | \"therapeutic_indication\"\n      | \"pack_size\"\n      | \"pack_type\"\n      | \"shelf_life_in_month\"\n      | \"storage_statement\"\n      | \"distribution_category\"\n      | \"name_of_marketing_authorization_holder\"\n      | \"date_ma_certificate_issued_to_applicant\"\n      | \"product_category\"\n      | \"main\";\n    msg: string;\n  } | null;\n}\n\nexport class RegisterProduct extends Component<\n  RegisterProductProps,\n  RegisterProductState\n> {\n  constructor(props: RegisterProductProps) {\n    super(props);\n\n    this.state = {\n      registration_number: this.props.editData.registration_number,\n      application_ref_number: this.props.editData.application_ref_number,\n      name_of_the_active_ingredient:\n        this.props.editData.name_of_the_active_ingredient,\n      therapeutic_indication: this.props.editData.therapeutic_indication,\n      pack_size: this.props.editData.pack_size,\n      pack_type: this.props.editData.pack_type,\n      shelf_life_in_month: this.props.editData.shelf_life_in_month,\n      storage_statement: this.props.editData.storage_statement,\n      distribution_category: this.props.editData.distribution_category,\n      name_of_marketing_authorization_holder:\n        this.props.editData.name_of_marketing_authorization_holder,\n      date_ma_certificate_issued_to_applicant:\n        this.props.editData.date_ma_certificate_issued_to_applicant === \"\"\n          ? \"\"\n          : this.props.editData.date_ma_certificate_issued_to_applicant,\n      product_category:\n        this.props.editData.product_category === null ||\n        this.props.editData.product_category === undefined\n          ? \"\"\n          : this.props.editData.product_category,\n      loading: false,\n      success: \"\",\n      error: null,\n    };\n  }\n  saveProductDetails = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.state.registration_number === \"\") {\n      return this.setState({\n        error: {\n          target: \"registration_number\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.name_of_the_active_ingredient === \"\") {\n      return this.setState({\n        error: {\n          target: \"name_of_the_active_ingredient\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.therapeutic_indication === \"\") {\n      return this.setState({\n        error: {\n          target: \"therapeutic_indication\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.pack_size === \"\") {\n      return this.setState({\n        error: {\n          target: \"pack_size\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.pack_type === \"\") {\n      return this.setState({\n        error: {\n          target: \"pack_type\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.shelf_life_in_month === \"\") {\n      return this.setState({\n        error: {\n          target: \"shelf_life_in_month\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.storage_statement === \"\") {\n      return this.setState({\n        error: {\n          target: \"storage_statement\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.distribution_category === \"\") {\n      return this.setState({\n        error: {\n          target: \"distribution_category\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.name_of_marketing_authorization_holder === \"\") {\n      return this.setState({\n        error: {\n          target: \"name_of_marketing_authorization_holder\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.date_ma_certificate_issued_to_applicant === \"\") {\n      return this.setState({\n        error: {\n          target: \"date_ma_certificate_issued_to_applicant\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (\n      this.state.product_category === \"\" ||\n      this.state.product_category.length < 2\n    ) {\n      return this.setState({\n        error: {\n          target: \"product_category\",\n          msg: \"Please select product category\",\n        },\n      });\n    }\n    this.setState({ loading: true });\n    // Save the data\n    const data: RegisterProductDataInterface = {\n      registration_number: this.state.registration_number,\n      application_ref_number: this.state.application_ref_number,\n      name_of_the_active_ingredient: this.state.name_of_the_active_ingredient,\n      therapeutic_indication: this.state.therapeutic_indication,\n      pack_size: this.state.pack_size,\n      pack_type: this.state.pack_type,\n      shelf_life_in_month: this.state.shelf_life_in_month,\n      storage_statement: this.state.storage_statement,\n      distribution_category: this.state.distribution_category,\n      name_of_marketing_authorization_holder:\n        this.state.name_of_marketing_authorization_holder,\n      date_ma_certificate_issued_to_applicant:\n        this.state.date_ma_certificate_issued_to_applicant,\n      product_category: this.state.product_category,\n    };\n    console.log(\"Submitted data: \", data);\n    FC_RegisterProduct(\n      data,\n      this.props.type === \"Add\" ? \"Add\" : \"Update\",\n      (\n        loading: boolean,\n        feedback: { type: \"success\" | \"error\"; msg: string } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (feedback !== null) {\n          if (feedback.type === \"success\") {\n            this.props.onSave();\n          }\n          if (feedback.type === \"error\") {\n            this.setState({\n              error: {\n                target: \"main\",\n                msg: feedback.msg,\n              },\n            });\n          }\n        }\n      }\n    );\n  };\n  render() {\n    return (\n      <div>\n        <MainContainer className=\"mt-3 animate__animated animate__fadeIn\">\n          <div className=\"\">\n            <div className=\"flex flex-row items-center gap-3 mb-3\">\n              <div className=\"\">\n                <div\n                  onClick={this.props.onBack}\n                  className={`bg-gray-100 cursor-pointer hover:bg-primary-100 hover:text-primary-800 flex items-center justify-center h-10 w-10 rounded-full`}\n                >\n                  {this.props.type === \"Edit\" ? (\n                    <BsArrowLeft className=\"text-3xl\" />\n                  ) : (\n                    <IoAddCircleOutline className=\"text-3xl\" />\n                  )}\n                </div>\n              </div>\n              <div className=\"flex flex-col\">\n                <span className=\"text-xl font-extrabold\">\n                  {this.props.type === \"Edit\"\n                    ? \"Edit the product\"\n                    : \"Register a product\"}\n                </span>\n                <span className=\"text-xs\">\n                  Fill the following product details before submit\n                </span>\n              </div>\n            </div>\n            <form\n              onSubmit={this.saveProductDetails}\n              className=\"grid grid-cols-12 gap-3 w-full\"\n            >\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Product registration number\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.registration_number}\n                  onChange={(value: string) => {\n                    this.setState({ registration_number: value, error: null });\n                  }}\n                  error_key_name={\"registration_number\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Name of the active ingredient\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.name_of_the_active_ingredient}\n                  onChange={(value: string) => {\n                    this.setState({\n                      name_of_the_active_ingredient: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"name_of_the_active_ingredient\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Therapeutic indication\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.therapeutic_indication}\n                  onChange={(value: string) => {\n                    this.setState({\n                      therapeutic_indication: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"therapeutic_indication\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Pack size\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.pack_size}\n                  onChange={(value: string) => {\n                    this.setState({\n                      pack_size: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"pack_size\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Packaging type\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.pack_type}\n                  onChange={(value: string) => {\n                    this.setState({\n                      pack_type: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"pack_type\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Shelf life in month\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.shelf_life_in_month}\n                  onChange={(value: string) => {\n                    this.setState({\n                      shelf_life_in_month: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"shelf_life_in_month\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Storage statement\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.storage_statement}\n                  onChange={(value: string) => {\n                    this.setState({\n                      storage_statement: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"storage_statement\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Distribution category\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.distribution_category}\n                  onChange={(value: string) => {\n                    this.setState({\n                      distribution_category: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"distribution_category\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Name of marketing authorization holder\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.name_of_marketing_authorization_holder}\n                  onChange={(value: string) => {\n                    this.setState({\n                      name_of_marketing_authorization_holder: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"name_of_marketing_authorization_holder\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Date of certificate issued to applicant\"\n                  type=\"date\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.date_ma_certificate_issued_to_applicant}\n                  onChange={(value: string) => {\n                    this.setState({\n                      date_ma_certificate_issued_to_applicant: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"date_ma_certificate_issued_to_applicant\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <span className=\"text-sm\">\n                  Choose product category{\" \"}\n                  {console.log(\"test : \", this.state.product_category)}\n                </span>\n                <select\n                  className={`border ${\n                    this.state.error !== null &&\n                    this.state.error.target === \"product_category\"\n                      ? \"border-red-600 text-red-600\"\n                      : \"border-primary-800\"\n                  }  rounded-md px-3 py-2 w-full font-bold mb-2`}\n                  value={this.state.product_category}\n                  onChange={(e) =>\n                    this.setState({\n                      product_category: e.target.value,\n                      error: null,\n                    })\n                  }\n                >\n                  <option value=\"\">Choose product category</option>\n                  <option value=\"Human Medicinal Products\">\n                    Human Medicinal Products\n                  </option>\n                  <option value=\"Human Biological Products\">\n                    Human Biological Products\n                  </option>\n                </select>\n                {this.state.error !== null &&\n                  this.state.error.target === \"product_category\" && (\n                    <Alert\n                      alertType={AlertType.DANGER}\n                      title={\"Invalid input!\"}\n                      description={this.state.error.msg}\n                      close={() => {\n                        this.setState({\n                          error: null,\n                        });\n                      }}\n                    />\n                  )}\n              </div>\n              <div className=\"col-span-6\">\n                {this.state.error !== null &&\n                  this.state.error.target === \"main\" && (\n                    <div className=\"w-full mt-3\">\n                      {this.state.error.msg !== \"\" && (\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\n                            this.state.error.target === \"main\"\n                              ? \"Invalid input!\"\n                              : \"Error Occurred\"\n                          }\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                            });\n                          }}\n                        />\n                      )}\n                    </div>\n                  )}\n                <button\n                  type=\"submit\"\n                  className=\"flex flex-row items-center justify-center gap-2 font-normal px-3 py-2 rounded-md cursor-pointer text-white bg-primary-800 hover:bg-primary-900 mt-5\"\n                >\n                  <div>\n                    {this.state.loading === true ? (\n                      <AiOutlineLoading3Quarters className=\"text-xl animate-spin\" />\n                    ) : (\n                      <IoSaveOutline className=\"text-xl\" />\n                    )}\n                  </div>\n                  <span>\n                    {this.state.loading === true\n                      ? \"Loading, please wait...\"\n                      : \"Save changes\"}\n                  </span>\n                </button>\n              </div>\n            </form>\n          </div>\n        </MainContainer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport { IoSaveOutline } from \"react-icons/io5\";\nimport { connect } from \"react-redux\";\nimport { Auth, FC_CreateApplication, System } from \"../../actions\";\nimport Alert, { AlertType } from \"../../components/Alert/Alert\";\nimport MainContainer from \"../../components/MainContainer/MainContainer\";\nimport { StoreState } from \"../../reducers\";\n\nexport const FormInput = (props: {\n  title: string;\n  value: string;\n  onChange: (value: string) => void;\n  type: \"text\" | \"number\" | \"date\";\n  disabled: boolean;\n  error: {\n    target: string;\n    msg: string;\n  };\n  error_key_name: string;\n  onCloseError: () => void;\n}) => {\n  return (\n    <div className=\"w-full\">\n      <span className=\"text-sm\">{props.title}</span>\n      <input\n        type={props.type}\n        value={props.value}\n        onChange={(e) => {\n          props.onChange(e.target.value);\n        }}\n        disabled={props.disabled}\n        className={`px-3 py-2 rounded-md border font-bold ${\n          props.error.target === props.error_key_name\n            ? \"border-red-600\"\n            : \"border-primary-800\"\n        } w-full text-sm`}\n      />\n      {props.error.target === props.error_key_name && (\n        <Alert\n          alertType={AlertType.DANGER}\n          title={\n            props.error.target === props.error_key_name\n              ? \"Invalid input!\"\n              : \"Error Occurred\"\n          }\n          description={props.error.msg}\n          close={props.onCloseError}\n        />\n      )}\n    </div>\n  );\n};\n\nexport interface CreateApplicationInterface {\n  application_ref_number: string;\n  submission_date: string;\n  product_brand_name: string;\n  product_common_name: string;\n  product_strength: string;\n  product_dosage_form: string;\n  manufacturer_name_and_country: string;\n  manufacturing_site_address: string;\n  applicant_name: string;\n  applicant_address: string;\n  local_technical_representative: string;\n  date_ma_certificate_issued_to_applicant: string | null;\n  registration_Status: string;\n  created_by: string;\n}\n\ninterface CreateApplicationProps {\n  auth: Auth;\n  system: System;\n  type?: \"Edit\" | \"Add\";\n  display?: \"Page\" | \"Modal\";\n  editData?: CreateApplicationInterface;\n  onBack?: () => void;\n  onSave?: () => void;\n}\ninterface CreateApplicationState {\n  application_ref_number: string;\n  submission_date: string;\n  product_brand_name: string;\n  product_common_name: string;\n  product_strength: string;\n  product_dosage_form: string;\n  manufacturer_name_and_country: string;\n  manufacturing_site_address: string;\n  applicant_name: string;\n  applicant_address: string;\n  local_technical_representative: string;\n  date_ma_certificate_issued_to_applicant: string | null;\n  registration_Status: string;\n  loading: boolean;\n  success: string;\n  error: {\n    target:\n      | \"application_ref_number\"\n      | \"submission_date\"\n      | \"product_brand_name\"\n      | \"product_common_name\"\n      | \"product_strength\"\n      | \"product_dosage_form\"\n      | \"manufacturer_name_and_country\"\n      | \"manufacturing_site_address\"\n      | \"applicant_name\"\n      | \"applicant_address\"\n      | \"local_technical_representative\"\n      | \"date_ma_certificate_issued_to_applicant\"\n      | \"main\";\n    msg: string;\n  } | null;\n}\n\nexport class _CreateApplication extends Component<\n  CreateApplicationProps,\n  CreateApplicationState\n> {\n  constructor(props: CreateApplicationProps) {\n    super(props);\n\n    this.state = {\n      applicant_address:\n        this.props.editData === undefined\n          ? \"\"\n          : this.props.editData.applicant_address,\n      application_ref_number:\n        this.props.editData === undefined\n          ? \"\"\n          : this.props.editData.application_ref_number,\n      date_ma_certificate_issued_to_applicant:\n        this.props.editData === undefined\n          ? \"\"\n          : this.props.editData.date_ma_certificate_issued_to_applicant,\n      local_technical_representative:\n        this.props.editData === undefined\n          ? \"\"\n          : this.props.editData.local_technical_representative,\n      manufacturing_site_address:\n        this.props.editData === undefined\n          ? \"\"\n          : this.props.editData.manufacturing_site_address,\n      manufacturer_name_and_country:\n        this.props.editData === undefined\n          ? \"\"\n          : this.props.editData.manufacturer_name_and_country,\n      product_brand_name:\n        this.props.editData === undefined\n          ? \"\"\n          : this.props.editData.product_brand_name,\n      product_common_name:\n        this.props.editData === undefined\n          ? \"\"\n          : this.props.editData.product_common_name,\n      product_dosage_form:\n        this.props.editData === undefined\n          ? \"\"\n          : this.props.editData.product_dosage_form,\n      product_strength:\n        this.props.editData === undefined\n          ? \"\"\n          : this.props.editData.product_strength,\n      registration_Status:\n        this.props.editData === undefined\n          ? \"NOT_SCREENED\"\n          : this.props.editData.registration_Status,\n      submission_date:\n        this.props.editData === undefined\n          ? \"\"\n          : this.props.editData.submission_date,\n      applicant_name:\n        this.props.editData === undefined\n          ? \"\"\n          : this.props.editData.applicant_name,\n\n      loading: false,\n      success: \"\",\n      error: null,\n    };\n  }\n  saveProductDetails = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.state.applicant_name === \"\") {\n      return this.setState({\n        error: {\n          target: \"applicant_name\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.application_ref_number === \"\") {\n      return this.setState({\n        error: {\n          target: \"application_ref_number\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    // if (this.state.date_ma_certificate_issued_to_applicant === \"\") {\n    //   return this.setState({\n    //     error: {\n    //       target: \"date_ma_certificate_issued_to_applicant\",\n    //       msg: \"This field is required\",\n    //     },\n    //   });\n    // }\n    if (this.state.local_technical_representative === \"\") {\n      return this.setState({\n        error: {\n          target: \"local_technical_representative\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.manufacturer_name_and_country === \"\") {\n      return this.setState({\n        error: {\n          target: \"manufacturer_name_and_country\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.manufacturing_site_address === \"\") {\n      return this.setState({\n        error: {\n          target: \"manufacturing_site_address\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.product_brand_name === \"\") {\n      return this.setState({\n        error: {\n          target: \"product_brand_name\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.product_common_name === \"\") {\n      return this.setState({\n        error: {\n          target: \"product_common_name\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.product_dosage_form === \"\") {\n      return this.setState({\n        error: {\n          target: \"product_dosage_form\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.product_strength === \"\") {\n      return this.setState({\n        error: {\n          target: \"product_strength\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    if (this.state.submission_date === \"\") {\n      return this.setState({\n        error: {\n          target: \"submission_date\",\n          msg: \"This field is required\",\n        },\n      });\n    }\n    this.setState({ loading: true });\n    // Save the data\n    const data: CreateApplicationInterface = {\n      applicant_address: this.state.applicant_address,\n      application_ref_number: this.state.application_ref_number,\n      date_ma_certificate_issued_to_applicant: \"null\",\n      local_technical_representative: this.state.local_technical_representative,\n      manufacturing_site_address: this.state.manufacturing_site_address,\n      manufacturer_name_and_country: this.state.manufacturer_name_and_country,\n      product_brand_name: this.state.product_brand_name,\n      product_common_name: this.state.product_common_name,\n      product_dosage_form: this.state.product_dosage_form,\n      product_strength: this.state.product_strength,\n      registration_Status: this.state.registration_Status,\n      submission_date: this.state.submission_date,\n      applicant_name: this.state.applicant_name,\n      created_by:\n        this.props.auth.user === null\n          ? \"No user selected\"\n          : this.props.auth.user.user_id, //User did the action\n    };\n    console.log(\"Submitted data: \", data);\n    FC_CreateApplication(\n      data,\n      this.props.type === undefined || this.props.type === \"Add\"\n        ? \"Add\"\n        : \"Update\",\n      (\n        loading: boolean,\n        feedback: { type: \"success\" | \"error\"; msg: string } | null\n      ) => {\n        this.setState({ loading: loading });\n        if (feedback !== null) {\n          if (feedback.type === \"success\") {\n            this.setState({ success: feedback.msg, error: null });\n            this.props.onSave && this.props.onSave();\n          }\n          if (feedback.type === \"error\") {\n            this.setState({\n              error: {\n                target: \"main\",\n                msg: feedback.msg,\n              },\n            });\n          }\n        }\n      }\n    );\n  };\n  render() {\n    return (\n      <div>\n        <MainContainer className=\"mt-3 animate__animated animate__fadeIn\">\n          <div className=\"\">\n            <div className=\"flex flex-row items-center gap-3 mb-3\">\n              <div className=\"\">\n                <div\n                  onClick={this.props.onBack}\n                  className={`bg-gray-100 cursor-pointer hover:bg-primary-100 hover:text-primary-800 flex items-center justify-center h-10 w-10 rounded-full`}\n                >\n                  <BsArrowLeft className=\"text-3xl\" />\n                </div>\n              </div>\n              <div className=\"flex flex-col\">\n                <span className=\"text-xl font-extrabold\">\n                  {this.props.type === \"Edit\"\n                    ? \"Edit the application\"\n                    : \"Create new application\"}\n                </span>\n                <span className=\"text-xs\">\n                  Fill the following application details before submit\n                </span>\n              </div>\n            </div>\n            <form\n              onSubmit={this.saveProductDetails}\n              className=\"grid grid-cols-6 md:grid-cols-12 gap-3 w-full\"\n            >\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Applicant name\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.applicant_name}\n                  onChange={(value: string) => {\n                    this.setState({ applicant_name: value, error: null });\n                  }}\n                  error_key_name={\"applicant_name\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Reference number\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.application_ref_number}\n                  onChange={(value: string) => {\n                    this.setState({\n                      application_ref_number: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"application_ref_number\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Applicant address\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.applicant_address}\n                  onChange={(value: string) => {\n                    this.setState({\n                      applicant_address: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"applicant_address\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Local technical representative\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.local_technical_representative}\n                  onChange={(value: string) => {\n                    this.setState({\n                      local_technical_representative: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"local_technical_representative\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Manufacturer name and country\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.manufacturer_name_and_country}\n                  onChange={(value: string) => {\n                    this.setState({\n                      manufacturer_name_and_country: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"manufacturer_name_and_country\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Manufacturing site address\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.manufacturing_site_address}\n                  onChange={(value: string) => {\n                    this.setState({\n                      manufacturing_site_address: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"manufacturing_site_address\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Product brand name\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.product_brand_name}\n                  onChange={(value: string) => {\n                    this.setState({\n                      product_brand_name: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"product_brand_name\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"product common name\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.product_common_name}\n                  onChange={(value: string) => {\n                    this.setState({\n                      product_common_name: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"product_common_name\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Product dosage form and appearance\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.product_dosage_form}\n                  onChange={(value: string) => {\n                    this.setState({\n                      product_dosage_form: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"product_dosage_form\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Product strength\"\n                  type=\"text\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.product_strength}\n                  onChange={(value: string) => {\n                    this.setState({\n                      product_strength: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"product_strength\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6 flex flex-col w-full\">\n                <FormInput\n                  title=\"Submission date\"\n                  type=\"date\"\n                  disabled={this.state.loading}\n                  error={\n                    this.state.error === null\n                      ? {\n                          target: \"\",\n                          msg: \"\",\n                        }\n                      : this.state.error\n                  }\n                  value={this.state.submission_date}\n                  onChange={(value: string) => {\n                    this.setState({\n                      submission_date: value,\n                      error: null,\n                    });\n                  }}\n                  error_key_name={\"submission_date\"}\n                  onCloseError={() => {\n                    this.setState({ error: null, success: \"\" });\n                  }}\n                />\n              </div>\n              <div className=\"col-span-6\">\n                {this.state.success !== \"\" && (\n                  <div className=\"w-full mt-3\">\n                    {\n                      <Alert\n                        alertType={AlertType.SUCCESS}\n                        title={\"Action done successfully\"}\n                        description={this.state.success}\n                        close={() => {\n                          this.setState({\n                            error: null,\n                          });\n                        }}\n                      />\n                    }\n                  </div>\n                )}\n                {this.state.error !== null &&\n                  this.state.error.target === \"main\" && (\n                    <div className=\"w-full mt-3\">\n                      {this.state.error.msg !== \"\" && (\n                        <Alert\n                          alertType={AlertType.DANGER}\n                          title={\n                            this.state.error.target === \"main\"\n                              ? \"Invalid input!\"\n                              : \"Error Occurred\"\n                          }\n                          description={this.state.error.msg}\n                          close={() => {\n                            this.setState({\n                              error: null,\n                            });\n                          }}\n                        />\n                      )}\n                    </div>\n                  )}\n                <button\n                  type=\"submit\"\n                  className=\"flex flex-row items-center justify-center gap-2 font-normal px-3 py-2 rounded-md cursor-pointer text-white bg-primary-800 hover:bg-primary-900 mt-5\"\n                >\n                  <div>\n                    {this.state.loading === true ? (\n                      <AiOutlineLoading3Quarters className=\"text-xl animate-spin\" />\n                    ) : (\n                      <IoSaveOutline className=\"text-xl\" />\n                    )}\n                  </div>\n                  <span>\n                    {this.state.loading === true\n                      ? \"Loading, please wait...\"\n                      : \"Save changes\"}\n                  </span>\n                </button>\n              </div>\n            </form>\n          </div>\n        </MainContainer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): {\n  auth: Auth;\n  system: System;\n} => {\n  return {\n    auth,\n    system,\n  };\n};\n\nexport const CreateApplication = connect(\n  mapStateToProps,\n  {}\n)(_CreateApplication);\n"],"sourceRoot":""}